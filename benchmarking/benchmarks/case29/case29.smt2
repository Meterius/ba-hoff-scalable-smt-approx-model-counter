(set-logic QF_BV)
(declare-fun CLK_0 () (_ BitVec 1))
(declare-fun CLK_1 () (_ BitVec 1))
(declare-fun RESET_0 () (_ BitVec 1))
(declare-fun RESET_1 () (_ BitVec 1))
(declare-fun COUNT_0 () (_ BitVec 4))
(declare-fun COUNT_1 () (_ BitVec 4))
(define-fun $e1 () (_ BitVec 4) (_ bv0 4))
(define-fun $e2 () (_ BitVec 4) (_ bv14 4))
(define-fun $e3 () (_ BitVec 1) (ite (= CLK_0 CLK_1) #b1 #b0))
(define-fun $e4 () (_ BitVec 1) (ite (= RESET_0 RESET_1) #b1 #b0))
(define-fun $e5 () (_ BitVec 1) (bvand $e3 $e4))
(define-fun $e6 () (_ BitVec 1) (ite (= COUNT_1 $e1) #b1 #b0))
(define-fun $e7 () (_ BitVec 1) (bvand CLK_1 (bvnot $e3)))
(define-fun $e8 () (_ BitVec 1) (ite (= COUNT_0 (bvnot $e1)) #b1 #b0))
(define-fun $e9 () (_ BitVec 4) (bvadd COUNT_0 (bvnot $e2)))
(define-fun $e10 () (_ BitVec 1) (ite (= COUNT_1 $e9) #b1 #b0))
(define-fun $e11 () (_ BitVec 1) (bvand (bvnot $e6) $e8))
(define-fun $e12 () (_ BitVec 1) (bvand (bvnot $e8) (bvnot $e10)))
(define-fun $e13 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e12)))
(define-fun $e14 () (_ BitVec 1) (ite (= COUNT_0 COUNT_1) #b1 #b0))
(define-fun $e15 () (_ BitVec 1) (bvand $e7 (bvnot $e13)))
(define-fun $e16 () (_ BitVec 1) (bvand (bvnot $e7) (bvnot $e14)))
(define-fun $e17 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e16)))
(define-fun $e18 () (_ BitVec 1) (bvand RESET_1 (bvnot $e6)))
(define-fun $e19 () (_ BitVec 1) (bvand (bvnot RESET_1) (bvnot $e17)))
(define-fun $e20 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e19)))
(define-fun $e21 () (_ BitVec 1) (bvand $e5 (bvnot $e14)))
(define-fun $e22 () (_ BitVec 1) (bvand (bvnot $e5) (bvnot $e20)))
(assert (not (= (bvnot $e21) #b0)))
(assert (not (= (bvnot $e22) #b0)))
(check-sat)
(exit)
