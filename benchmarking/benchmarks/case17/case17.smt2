(set-logic QF_BV)
(declare-fun CLK_1 () (_ BitVec 1))
(declare-fun CLK_2 () (_ BitVec 1))
(declare-fun CLK_3 () (_ BitVec 1))
(declare-fun COUNT_2 () (_ BitVec 4))
(declare-fun RESET_1 () (_ BitVec 1))
(declare-fun RESET_2 () (_ BitVec 1))
(declare-fun RESET_3 () (_ BitVec 1))
(declare-fun TIME_TCK_1 () (_ BitVec 1))
(declare-fun TIME_TCK_0 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 4) (_ bv0 4))
(define-fun $e2 () (_ BitVec 4) (_ bv14 4))
(define-fun $e3 () (_ BitVec 1) (ite (= CLK_1 CLK_2) #b1 #b0))
(define-fun $e4 () (_ BitVec 1) (ite (= RESET_1 RESET_2) #b1 #b0))
(define-fun $e5 () (_ BitVec 1) (bvand $e3 $e4))
(define-fun $e6 () (_ BitVec 1) (bvand CLK_1 (bvnot $e3)))
(define-fun $e7 () (_ BitVec 1) (ite (= CLK_2 CLK_3) #b1 #b0))
(define-fun $e8 () (_ BitVec 1) (ite (= RESET_2 RESET_3) #b1 #b0))
(define-fun $e9 () (_ BitVec 1) (bvand $e7 $e8))
(define-fun $e10 () (_ BitVec 1) (bvand CLK_2 (bvnot $e7)))
(define-fun $e11 () (_ BitVec 1) (ite (= COUNT_2 (bvnot $e1)) #b1 #b0))
(define-fun $e12 () (_ BitVec 1) (ite (= COUNT_2 $e2) #b1 #b0))
(define-fun $e13 () (_ BitVec 1) (bvand $e10 (bvnot $e12)))
(define-fun $e14 () (_ BitVec 1) (bvand (bvnot $e10) (bvnot $e11)))
(define-fun $e15 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e14)))
(define-fun $e16 () (_ BitVec 1) (bvand (bvnot RESET_2) $e15))
(define-fun $e17 () (_ BitVec 1) (bvand $e9 (bvnot $e11)))
(define-fun $e18 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e16)))
(define-fun $e19 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e18)))
(define-fun $e20 () (_ BitVec 1) (ite (= TIME_TCK_0 $e19) #b1 #b0))
(define-fun $e21 () (_ BitVec 1) (ite (= TIME_TCK_1 TIME_TCK_0) #b1 #b0))
(define-fun $e22 () (_ BitVec 1) (bvand $e6 (bvnot $e20)))
(define-fun $e23 () (_ BitVec 1) (bvand (bvnot $e6) (bvnot $e21)))
(define-fun $e24 () (_ BitVec 1) (bvand (bvnot $e22) (bvnot $e23)))
(define-fun $e25 () (_ BitVec 1) (bvand RESET_1 TIME_TCK_0))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot RESET_1) (bvnot $e24)))
(define-fun $e27 () (_ BitVec 1) (bvand (bvnot $e25) (bvnot $e26)))
(define-fun $e28 () (_ BitVec 1) (bvand $e5 (bvnot $e21)))
(define-fun $e29 () (_ BitVec 1) (bvand (bvnot $e5) (bvnot $e27)))
(assert (not (= (bvnot $e28) #b0)))
(assert (not (= (bvnot $e29) #b0)))
(check-sat)
(exit)
