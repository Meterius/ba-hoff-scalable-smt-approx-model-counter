(set-logic QF_BV)
(declare-fun comparehi_0 () (_ BitVec 1))
(declare-fun comparehi_1 () (_ BitVec 1))
(declare-fun comparelo_0 () (_ BitVec 1))
(declare-fun comparelo_1 () (_ BitVec 1))
(declare-fun compareover_in_1 () (_ BitVec 1))
(declare-fun counteroverflow_1 () (_ BitVec 1))
(declare-fun fit_led2_0 () (_ BitVec 1))
(declare-fun fit_led2_1 () (_ BitVec 1))
(declare-fun fit_strated_pulse_1 () (_ BitVec 1))
(declare-fun forcehi_0 () (_ BitVec 1))
(declare-fun forcehi_1 () (_ BitVec 1))
(declare-fun forcelo_0 () (_ BitVec 1))
(declare-fun forcelo_1 () (_ BitVec 1))
(declare-fun loadcounter_0 () (_ BitVec 1))
(declare-fun loadcounter_1 () (_ BitVec 1))
(declare-fun readport_0 () (_ BitVec 1))
(declare-fun readport_1 () (_ BitVec 1))
(declare-fun reset_1 () (_ BitVec 1))
(declare-fun sreg0_0 () (_ BitVec 4))
(declare-fun st_reg_0 () (_ BitVec 4))
(declare-fun startselftest_0 () (_ BitVec 1))
(declare-fun stbusy_0 () (_ BitVec 1))
(declare-fun stbusy_1 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 4) (_ bv0 4))
(define-fun $e2 () (_ BitVec 4) (_ bv14 4))
(define-fun $e3 () (_ BitVec 4) (_ bv2 4))
(define-fun $e4 () (_ BitVec 4) (_ bv12 4))
(define-fun $e5 () (_ BitVec 4) (_ bv4 4))
(define-fun $e6 () (_ BitVec 4) (_ bv10 4))
(define-fun $e7 () (_ BitVec 4) (_ bv6 4))
(define-fun $e8 () (_ BitVec 4) (_ bv8 4))
(define-fun $e9 () (_ BitVec 1) (ite (= sreg0_0 $e1) #b1 #b0))
(define-fun $e10 () (_ BitVec 1) (ite (= comparehi_0 comparehi_1) #b1 #b0))
(define-fun $e11 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e2)) #b1 #b0))
(define-fun $e12 () (_ BitVec 1) (ite (= sreg0_0 $e3) #b1 #b0))
(define-fun $e13 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e4)) #b1 #b0))
(define-fun $e14 () (_ BitVec 1) (ite (= sreg0_0 $e5) #b1 #b0))
(define-fun $e15 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e6)) #b1 #b0))
(define-fun $e16 () (_ BitVec 1) (ite (= sreg0_0 $e6) #b1 #b0))
(define-fun $e17 () (_ BitVec 1) (ite (= sreg0_0 $e7) #b1 #b0))
(define-fun $e18 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e8)) #b1 #b0))
(define-fun $e19 () (_ BitVec 1) (ite (= sreg0_0 $e8) #b1 #b0))
(define-fun $e20 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e7)) #b1 #b0))
(define-fun $e21 () (_ BitVec 1) (ite (= comparehi_1 $e20) #b1 #b0))
(define-fun $e22 () (_ BitVec 1) (bvand (bvnot $e10) $e19))
(define-fun $e23 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e21)))
(define-fun $e24 () (_ BitVec 1) (bvand (bvnot $e22) (bvnot $e23)))
(define-fun $e25 () (_ BitVec 1) (bvand (bvnot $e10) $e18))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e24)))
(define-fun $e27 () (_ BitVec 1) (bvand (bvnot $e25) (bvnot $e26)))
(define-fun $e28 () (_ BitVec 1) (bvand (bvnot $e10) $e17))
(define-fun $e29 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e27)))
(define-fun $e30 () (_ BitVec 1) (bvand (bvnot $e28) (bvnot $e29)))
(define-fun $e31 () (_ BitVec 1) (bvand (bvnot $e10) $e16))
(define-fun $e32 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e30)))
(define-fun $e33 () (_ BitVec 1) (bvand (bvnot $e31) (bvnot $e32)))
(define-fun $e34 () (_ BitVec 1) (bvand (bvnot $e10) $e15))
(define-fun $e35 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e33)))
(define-fun $e36 () (_ BitVec 1) (bvand (bvnot $e34) (bvnot $e35)))
(define-fun $e37 () (_ BitVec 1) (bvand (bvnot $e10) $e14))
(define-fun $e38 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e36)))
(define-fun $e39 () (_ BitVec 1) (bvand (bvnot $e37) (bvnot $e38)))
(define-fun $e40 () (_ BitVec 1) (bvand (bvnot $e10) $e13))
(define-fun $e41 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e39)))
(define-fun $e42 () (_ BitVec 1) (bvand (bvnot $e40) (bvnot $e41)))
(define-fun $e43 () (_ BitVec 1) (bvand (bvnot $e10) $e12))
(define-fun $e44 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e42)))
(define-fun $e45 () (_ BitVec 1) (bvand (bvnot $e43) (bvnot $e44)))
(define-fun $e46 () (_ BitVec 1) (bvand (bvnot $e10) $e11))
(define-fun $e47 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e45)))
(define-fun $e48 () (_ BitVec 1) (bvand (bvnot $e46) (bvnot $e47)))
(define-fun $e49 () (_ BitVec 1) (bvand $e9 (bvnot $e10)))
(define-fun $e50 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e48)))
(define-fun $e51 () (_ BitVec 1) (bvand (bvnot $e49) (bvnot $e50)))
(define-fun $e52 () (_ BitVec 1) (bvand comparehi_1 reset_1))
(define-fun $e53 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e51)))
(define-fun $e54 () (_ BitVec 1) (ite (= comparelo_0 comparelo_1) #b1 #b0))
(define-fun $e55 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e5)) #b1 #b0))
(define-fun $e56 () (_ BitVec 1) (bvand (bvnot $e54) $e55))
(define-fun $e57 () (_ BitVec 1) (bvand comparelo_1 (bvnot $e55)))
(define-fun $e58 () (_ BitVec 1) (bvand (bvnot $e56) (bvnot $e57)))
(define-fun $e59 () (_ BitVec 1) (bvand $e20 (bvnot $e54)))
(define-fun $e60 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e58)))
(define-fun $e61 () (_ BitVec 1) (bvand (bvnot $e59) (bvnot $e60)))
(define-fun $e62 () (_ BitVec 1) (bvand $e19 (bvnot $e54)))
(define-fun $e63 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e61)))
(define-fun $e64 () (_ BitVec 1) (bvand (bvnot $e62) (bvnot $e63)))
(define-fun $e65 () (_ BitVec 1) (bvand $e18 (bvnot $e54)))
(define-fun $e66 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e64)))
(define-fun $e67 () (_ BitVec 1) (bvand (bvnot $e65) (bvnot $e66)))
(define-fun $e68 () (_ BitVec 1) (bvand $e17 (bvnot $e54)))
(define-fun $e69 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e67)))
(define-fun $e70 () (_ BitVec 1) (bvand (bvnot $e68) (bvnot $e69)))
(define-fun $e71 () (_ BitVec 1) (bvand comparelo_1 $e16))
(define-fun $e72 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e70)))
(define-fun $e73 () (_ BitVec 1) (bvand (bvnot $e71) (bvnot $e72)))
(define-fun $e74 () (_ BitVec 1) (bvand (bvnot comparelo_1) $e15))
(define-fun $e75 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e73)))
(define-fun $e76 () (_ BitVec 1) (bvand (bvnot $e74) (bvnot $e75)))
(define-fun $e77 () (_ BitVec 1) (bvand $e14 (bvnot $e54)))
(define-fun $e78 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e76)))
(define-fun $e79 () (_ BitVec 1) (bvand (bvnot $e77) (bvnot $e78)))
(define-fun $e80 () (_ BitVec 1) (bvand $e13 (bvnot $e54)))
(define-fun $e81 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e79)))
(define-fun $e82 () (_ BitVec 1) (bvand (bvnot $e80) (bvnot $e81)))
(define-fun $e83 () (_ BitVec 1) (bvand $e12 (bvnot $e54)))
(define-fun $e84 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e82)))
(define-fun $e85 () (_ BitVec 1) (bvand (bvnot $e83) (bvnot $e84)))
(define-fun $e86 () (_ BitVec 1) (bvand $e11 (bvnot $e54)))
(define-fun $e87 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e85)))
(define-fun $e88 () (_ BitVec 1) (bvand (bvnot $e86) (bvnot $e87)))
(define-fun $e89 () (_ BitVec 1) (bvand $e9 (bvnot $e54)))
(define-fun $e90 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e88)))
(define-fun $e91 () (_ BitVec 1) (bvand (bvnot $e89) (bvnot $e90)))
(define-fun $e92 () (_ BitVec 1) (bvand comparelo_1 reset_1))
(define-fun $e93 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e91)))
(define-fun $e94 () (_ BitVec 1) (ite (= fit_led2_0 fit_led2_1) #b1 #b0))
(define-fun $e95 () (_ BitVec 1) (bvand fit_led2_1 startselftest_0))
(define-fun $e96 () (_ BitVec 1) (bvand (bvnot startselftest_0) (bvnot $e94)))
(define-fun $e97 () (_ BitVec 1) (bvand (bvnot $e95) (bvnot $e96)))
(define-fun $e98 () (_ BitVec 1) (bvand compareover_in_1 (bvnot fit_led2_1)))
(define-fun $e99 () (_ BitVec 1) (bvand (bvnot compareover_in_1) (bvnot $e94)))
(define-fun $e100 () (_ BitVec 1) (bvand (bvnot $e98) (bvnot $e99)))
(define-fun $e101 () (_ BitVec 1) (bvand $e55 (bvnot $e100)))
(define-fun $e102 () (_ BitVec 1) (bvand (bvnot fit_led2_1) (bvnot $e55)))
(define-fun $e103 () (_ BitVec 1) (bvand (bvnot $e101) (bvnot $e102)))
(define-fun $e104 () (_ BitVec 1) (bvand $e20 (bvnot $e94)))
(define-fun $e105 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e103)))
(define-fun $e106 () (_ BitVec 1) (bvand (bvnot $e104) (bvnot $e105)))
(define-fun $e107 () (_ BitVec 1) (bvand $e19 (bvnot $e94)))
(define-fun $e108 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e106)))
(define-fun $e109 () (_ BitVec 1) (bvand (bvnot $e107) (bvnot $e108)))
(define-fun $e110 () (_ BitVec 1) (bvand $e18 (bvnot $e94)))
(define-fun $e111 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e109)))
(define-fun $e112 () (_ BitVec 1) (bvand (bvnot $e110) (bvnot $e111)))
(define-fun $e113 () (_ BitVec 1) (bvand $e17 (bvnot $e94)))
(define-fun $e114 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e112)))
(define-fun $e115 () (_ BitVec 1) (bvand (bvnot $e113) (bvnot $e114)))
(define-fun $e116 () (_ BitVec 1) (bvand $e16 (bvnot $e94)))
(define-fun $e117 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e115)))
(define-fun $e118 () (_ BitVec 1) (bvand (bvnot $e116) (bvnot $e117)))
(define-fun $e119 () (_ BitVec 1) (bvand $e15 (bvnot $e94)))
(define-fun $e120 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e118)))
(define-fun $e121 () (_ BitVec 1) (bvand (bvnot $e119) (bvnot $e120)))
(define-fun $e122 () (_ BitVec 1) (bvand $e14 (bvnot $e94)))
(define-fun $e123 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e121)))
(define-fun $e124 () (_ BitVec 1) (bvand (bvnot $e122) (bvnot $e123)))
(define-fun $e125 () (_ BitVec 1) (bvand $e13 (bvnot $e94)))
(define-fun $e126 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e124)))
(define-fun $e127 () (_ BitVec 1) (bvand (bvnot $e125) (bvnot $e126)))
(define-fun $e128 () (_ BitVec 1) (bvand $e12 (bvnot $e94)))
(define-fun $e129 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e127)))
(define-fun $e130 () (_ BitVec 1) (bvand (bvnot $e128) (bvnot $e129)))
(define-fun $e131 () (_ BitVec 1) (bvand $e11 (bvnot $e97)))
(define-fun $e132 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e130)))
(define-fun $e133 () (_ BitVec 1) (bvand (bvnot $e131) (bvnot $e132)))
(define-fun $e134 () (_ BitVec 1) (bvand (bvnot fit_led2_1) $e9))
(define-fun $e135 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e133)))
(define-fun $e136 () (_ BitVec 1) (bvand (bvnot fit_led2_1) reset_1))
(define-fun $e137 () (_ BitVec 1) (ite (= forcehi_0 forcehi_1) #b1 #b0))
(define-fun $e138 () (_ BitVec 1) (bvand compareover_in_1 forcehi_1))
(define-fun $e139 () (_ BitVec 1) (bvand (bvnot compareover_in_1) (bvnot $e137)))
(define-fun $e140 () (_ BitVec 1) (bvand (bvnot $e138) (bvnot $e139)))
(define-fun $e141 () (_ BitVec 1) (bvand $e55 (bvnot $e140)))
(define-fun $e142 () (_ BitVec 1) (bvand forcehi_1 (bvnot $e55)))
(define-fun $e143 () (_ BitVec 1) (bvand (bvnot $e141) (bvnot $e142)))
(define-fun $e144 () (_ BitVec 1) (bvand $e20 (bvnot $e137)))
(define-fun $e145 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e143)))
(define-fun $e146 () (_ BitVec 1) (bvand (bvnot $e144) (bvnot $e145)))
(define-fun $e147 () (_ BitVec 1) (bvand $e19 (bvnot $e137)))
(define-fun $e148 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e146)))
(define-fun $e149 () (_ BitVec 1) (bvand (bvnot $e147) (bvnot $e148)))
(define-fun $e150 () (_ BitVec 1) (bvand (bvnot forcehi_1) $e18))
(define-fun $e151 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e149)))
(define-fun $e152 () (_ BitVec 1) (bvand (bvnot $e150) (bvnot $e151)))
(define-fun $e153 () (_ BitVec 1) (bvand $e17 (bvnot $e137)))
(define-fun $e154 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e152)))
(define-fun $e155 () (_ BitVec 1) (bvand (bvnot $e153) (bvnot $e154)))
(define-fun $e156 () (_ BitVec 1) (bvand $e16 (bvnot $e137)))
(define-fun $e157 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e155)))
(define-fun $e158 () (_ BitVec 1) (bvand (bvnot $e156) (bvnot $e157)))
(define-fun $e159 () (_ BitVec 1) (bvand $e15 (bvnot $e137)))
(define-fun $e160 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e158)))
(define-fun $e161 () (_ BitVec 1) (bvand (bvnot $e159) (bvnot $e160)))
(define-fun $e162 () (_ BitVec 1) (bvand $e14 (bvnot $e137)))
(define-fun $e163 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e161)))
(define-fun $e164 () (_ BitVec 1) (bvand (bvnot $e162) (bvnot $e163)))
(define-fun $e165 () (_ BitVec 1) (bvand $e13 (bvnot $e137)))
(define-fun $e166 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e164)))
(define-fun $e167 () (_ BitVec 1) (bvand (bvnot $e165) (bvnot $e166)))
(define-fun $e168 () (_ BitVec 1) (bvand $e12 (bvnot $e137)))
(define-fun $e169 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e167)))
(define-fun $e170 () (_ BitVec 1) (bvand (bvnot $e168) (bvnot $e169)))
(define-fun $e171 () (_ BitVec 1) (bvand $e11 (bvnot $e137)))
(define-fun $e172 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e170)))
(define-fun $e173 () (_ BitVec 1) (bvand (bvnot $e171) (bvnot $e172)))
(define-fun $e174 () (_ BitVec 1) (bvand $e9 (bvnot $e137)))
(define-fun $e175 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e173)))
(define-fun $e176 () (_ BitVec 1) (bvand (bvnot $e174) (bvnot $e175)))
(define-fun $e177 () (_ BitVec 1) (bvand forcehi_1 reset_1))
(define-fun $e178 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e176)))
(define-fun $e179 () (_ BitVec 1) (ite (= forcelo_0 forcelo_1) #b1 #b0))
(define-fun $e180 () (_ BitVec 1) (bvand compareover_in_1 forcelo_1))
(define-fun $e181 () (_ BitVec 1) (bvand (bvnot compareover_in_1) (bvnot $e179)))
(define-fun $e182 () (_ BitVec 1) (bvand (bvnot $e180) (bvnot $e181)))
(define-fun $e183 () (_ BitVec 1) (bvand $e55 (bvnot $e179)))
(define-fun $e184 () (_ BitVec 1) (bvand forcelo_1 (bvnot $e55)))
(define-fun $e185 () (_ BitVec 1) (bvand (bvnot $e183) (bvnot $e184)))
(define-fun $e186 () (_ BitVec 1) (bvand $e20 (bvnot $e179)))
(define-fun $e187 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e185)))
(define-fun $e188 () (_ BitVec 1) (bvand (bvnot $e186) (bvnot $e187)))
(define-fun $e189 () (_ BitVec 1) (bvand $e19 (bvnot $e179)))
(define-fun $e190 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e188)))
(define-fun $e191 () (_ BitVec 1) (bvand (bvnot $e189) (bvnot $e190)))
(define-fun $e192 () (_ BitVec 1) (bvand $e18 (bvnot $e179)))
(define-fun $e193 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e191)))
(define-fun $e194 () (_ BitVec 1) (bvand (bvnot $e192) (bvnot $e193)))
(define-fun $e195 () (_ BitVec 1) (bvand $e17 (bvnot $e179)))
(define-fun $e196 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e194)))
(define-fun $e197 () (_ BitVec 1) (bvand (bvnot $e195) (bvnot $e196)))
(define-fun $e198 () (_ BitVec 1) (bvand $e16 (bvnot $e182)))
(define-fun $e199 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e197)))
(define-fun $e200 () (_ BitVec 1) (bvand (bvnot $e198) (bvnot $e199)))
(define-fun $e201 () (_ BitVec 1) (bvand $e15 (bvnot $e179)))
(define-fun $e202 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e200)))
(define-fun $e203 () (_ BitVec 1) (bvand (bvnot $e201) (bvnot $e202)))
(define-fun $e204 () (_ BitVec 1) (bvand $e14 (bvnot $e179)))
(define-fun $e205 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e203)))
(define-fun $e206 () (_ BitVec 1) (bvand (bvnot $e204) (bvnot $e205)))
(define-fun $e207 () (_ BitVec 1) (bvand (bvnot forcelo_1) $e13))
(define-fun $e208 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e206)))
(define-fun $e209 () (_ BitVec 1) (bvand (bvnot $e207) (bvnot $e208)))
(define-fun $e210 () (_ BitVec 1) (bvand $e12 (bvnot $e179)))
(define-fun $e211 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e209)))
(define-fun $e212 () (_ BitVec 1) (bvand (bvnot $e210) (bvnot $e211)))
(define-fun $e213 () (_ BitVec 1) (bvand $e11 (bvnot $e179)))
(define-fun $e214 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e212)))
(define-fun $e215 () (_ BitVec 1) (bvand (bvnot $e213) (bvnot $e214)))
(define-fun $e216 () (_ BitVec 1) (bvand $e9 (bvnot $e179)))
(define-fun $e217 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e215)))
(define-fun $e218 () (_ BitVec 1) (bvand (bvnot $e216) (bvnot $e217)))
(define-fun $e219 () (_ BitVec 1) (bvand forcelo_1 reset_1))
(define-fun $e220 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e218)))
(define-fun $e221 () (_ BitVec 1) (ite (= loadcounter_0 loadcounter_1) #b1 #b0))
(define-fun $e222 () (_ BitVec 1) (bvand (bvnot loadcounter_1) startselftest_0))
(define-fun $e223 () (_ BitVec 1) (bvand (bvnot startselftest_0) (bvnot $e221)))
(define-fun $e224 () (_ BitVec 1) (bvand (bvnot $e222) (bvnot $e223)))
(define-fun $e225 () (_ BitVec 1) (bvand compareover_in_1 (bvnot loadcounter_1)))
(define-fun $e226 () (_ BitVec 1) (bvand (bvnot compareover_in_1) (bvnot $e221)))
(define-fun $e227 () (_ BitVec 1) (bvand (bvnot $e225) (bvnot $e226)))
(define-fun $e228 () (_ BitVec 1) (bvand $e55 (bvnot $e221)))
(define-fun $e229 () (_ BitVec 1) (bvand loadcounter_1 (bvnot $e55)))
(define-fun $e230 () (_ BitVec 1) (bvand (bvnot $e228) (bvnot $e229)))
(define-fun $e231 () (_ BitVec 1) (bvand $e20 (bvnot $e221)))
(define-fun $e232 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e230)))
(define-fun $e233 () (_ BitVec 1) (bvand (bvnot $e231) (bvnot $e232)))
(define-fun $e234 () (_ BitVec 1) (bvand $e19 (bvnot $e221)))
(define-fun $e235 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e233)))
(define-fun $e236 () (_ BitVec 1) (bvand (bvnot $e234) (bvnot $e235)))
(define-fun $e237 () (_ BitVec 1) (bvand $e18 (bvnot $e221)))
(define-fun $e238 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e236)))
(define-fun $e239 () (_ BitVec 1) (bvand (bvnot $e237) (bvnot $e238)))
(define-fun $e240 () (_ BitVec 1) (bvand loadcounter_1 $e17))
(define-fun $e241 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e239)))
(define-fun $e242 () (_ BitVec 1) (bvand (bvnot $e240) (bvnot $e241)))
(define-fun $e243 () (_ BitVec 1) (bvand $e16 (bvnot $e227)))
(define-fun $e244 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e242)))
(define-fun $e245 () (_ BitVec 1) (bvand (bvnot $e243) (bvnot $e244)))
(define-fun $e246 () (_ BitVec 1) (bvand $e15 (bvnot $e221)))
(define-fun $e247 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e245)))
(define-fun $e248 () (_ BitVec 1) (bvand (bvnot $e246) (bvnot $e247)))
(define-fun $e249 () (_ BitVec 1) (bvand $e14 (bvnot $e221)))
(define-fun $e250 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e248)))
(define-fun $e251 () (_ BitVec 1) (bvand (bvnot $e249) (bvnot $e250)))
(define-fun $e252 () (_ BitVec 1) (bvand $e13 (bvnot $e221)))
(define-fun $e253 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e251)))
(define-fun $e254 () (_ BitVec 1) (bvand (bvnot $e252) (bvnot $e253)))
(define-fun $e255 () (_ BitVec 1) (bvand loadcounter_1 $e12))
(define-fun $e256 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e254)))
(define-fun $e257 () (_ BitVec 1) (bvand (bvnot $e255) (bvnot $e256)))
(define-fun $e258 () (_ BitVec 1) (bvand $e11 (bvnot $e224)))
(define-fun $e259 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e257)))
(define-fun $e260 () (_ BitVec 1) (bvand (bvnot $e258) (bvnot $e259)))
(define-fun $e261 () (_ BitVec 1) (bvand $e9 (bvnot $e221)))
(define-fun $e262 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e260)))
(define-fun $e263 () (_ BitVec 1) (bvand (bvnot $e261) (bvnot $e262)))
(define-fun $e264 () (_ BitVec 1) (bvand loadcounter_1 reset_1))
(define-fun $e265 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e263)))
(define-fun $e266 () (_ BitVec 1) (ite (= readport_0 readport_1) #b1 #b0))
(define-fun $e267 () (_ BitVec 1) (bvand counteroverflow_1 (bvnot readport_1)))
(define-fun $e268 () (_ BitVec 1) (bvand (bvnot counteroverflow_1) (bvnot $e266)))
(define-fun $e269 () (_ BitVec 1) (bvand (bvnot $e267) (bvnot $e268)))
(define-fun $e270 () (_ BitVec 1) (bvand $e55 (bvnot $e266)))
(define-fun $e271 () (_ BitVec 1) (bvand readport_1 (bvnot $e55)))
(define-fun $e272 () (_ BitVec 1) (bvand (bvnot $e270) (bvnot $e271)))
(define-fun $e273 () (_ BitVec 1) (bvand readport_1 $e20))
(define-fun $e274 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e272)))
(define-fun $e275 () (_ BitVec 1) (bvand (bvnot $e273) (bvnot $e274)))
(define-fun $e276 () (_ BitVec 1) (bvand $e19 (bvnot $e269)))
(define-fun $e277 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e275)))
(define-fun $e278 () (_ BitVec 1) (bvand (bvnot $e276) (bvnot $e277)))
(define-fun $e279 () (_ BitVec 1) (bvand $e18 (bvnot $e266)))
(define-fun $e280 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e278)))
(define-fun $e281 () (_ BitVec 1) (bvand (bvnot $e279) (bvnot $e280)))
(define-fun $e282 () (_ BitVec 1) (bvand $e17 (bvnot $e266)))
(define-fun $e283 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e281)))
(define-fun $e284 () (_ BitVec 1) (bvand (bvnot $e282) (bvnot $e283)))
(define-fun $e285 () (_ BitVec 1) (bvand $e16 (bvnot $e266)))
(define-fun $e286 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e284)))
(define-fun $e287 () (_ BitVec 1) (bvand (bvnot $e285) (bvnot $e286)))
(define-fun $e288 () (_ BitVec 1) (bvand readport_1 $e15))
(define-fun $e289 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e287)))
(define-fun $e290 () (_ BitVec 1) (bvand (bvnot $e288) (bvnot $e289)))
(define-fun $e291 () (_ BitVec 1) (bvand $e14 (bvnot $e269)))
(define-fun $e292 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e290)))
(define-fun $e293 () (_ BitVec 1) (bvand (bvnot $e291) (bvnot $e292)))
(define-fun $e294 () (_ BitVec 1) (bvand $e13 (bvnot $e266)))
(define-fun $e295 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e293)))
(define-fun $e296 () (_ BitVec 1) (bvand (bvnot $e294) (bvnot $e295)))
(define-fun $e297 () (_ BitVec 1) (bvand $e12 (bvnot $e266)))
(define-fun $e298 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e296)))
(define-fun $e299 () (_ BitVec 1) (bvand (bvnot $e297) (bvnot $e298)))
(define-fun $e300 () (_ BitVec 1) (bvand $e11 (bvnot $e266)))
(define-fun $e301 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e299)))
(define-fun $e302 () (_ BitVec 1) (bvand (bvnot $e300) (bvnot $e301)))
(define-fun $e303 () (_ BitVec 1) (bvand $e9 (bvnot $e266)))
(define-fun $e304 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e302)))
(define-fun $e305 () (_ BitVec 1) (bvand (bvnot $e303) (bvnot $e304)))
(define-fun $e306 () (_ BitVec 1) (bvand readport_1 reset_1))
(define-fun $e307 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e305)))
(define-fun $e308 () (_ BitVec 1) (ite (= st_reg_0 $e1) #b1 #b0))
(define-fun $e309 () (_ BitVec 1) (ite (= fit_strated_pulse_1 startselftest_0) #b1 #b0))
(define-fun $e310 () (_ BitVec 1) (ite (= st_reg_0 $e3) #b1 #b0))
(define-fun $e311 () (_ BitVec 1) (ite (= st_reg_0 $e5) #b1 #b0))
(define-fun $e312 () (_ BitVec 1) (ite (= st_reg_0 (bvnot $e4)) #b1 #b0))
(define-fun $e313 () (_ BitVec 1) (ite (= st_reg_0 (bvnot $e2)) #b1 #b0))
(define-fun $e314 () (_ BitVec 1) (bvand fit_strated_pulse_1 $e313))
(define-fun $e315 () (_ BitVec 1) (bvand (bvnot $e309) (bvnot $e313)))
(define-fun $e316 () (_ BitVec 1) (bvand (bvnot $e314) (bvnot $e315)))
(define-fun $e317 () (_ BitVec 1) (bvand (bvnot fit_strated_pulse_1) $e312))
(define-fun $e318 () (_ BitVec 1) (bvand (bvnot $e312) (bvnot $e316)))
(define-fun $e319 () (_ BitVec 1) (bvand (bvnot $e317) (bvnot $e318)))
(define-fun $e320 () (_ BitVec 1) (bvand (bvnot $e309) $e311))
(define-fun $e321 () (_ BitVec 1) (bvand (bvnot $e311) (bvnot $e319)))
(define-fun $e322 () (_ BitVec 1) (bvand (bvnot $e320) (bvnot $e321)))
(define-fun $e323 () (_ BitVec 1) (bvand (bvnot $e309) $e310))
(define-fun $e324 () (_ BitVec 1) (bvand (bvnot $e310) (bvnot $e322)))
(define-fun $e325 () (_ BitVec 1) (bvand (bvnot $e323) (bvnot $e324)))
(define-fun $e326 () (_ BitVec 1) (bvand $e308 (bvnot $e309)))
(define-fun $e327 () (_ BitVec 1) (bvand (bvnot $e308) (bvnot $e325)))
(define-fun $e328 () (_ BitVec 1) (bvand (bvnot $e326) (bvnot $e327)))
(define-fun $e329 () (_ BitVec 1) (bvand fit_strated_pulse_1 reset_1))
(define-fun $e330 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e328)))
(define-fun $e331 () (_ BitVec 1) (ite (= stbusy_0 stbusy_1) #b1 #b0))
(define-fun $e332 () (_ BitVec 1) (bvand startselftest_0 (bvnot stbusy_1)))
(define-fun $e333 () (_ BitVec 1) (bvand (bvnot startselftest_0) (bvnot $e331)))
(define-fun $e334 () (_ BitVec 1) (bvand (bvnot $e332) (bvnot $e333)))
(define-fun $e335 () (_ BitVec 1) (bvand compareover_in_1 stbusy_1))
(define-fun $e336 () (_ BitVec 1) (bvand (bvnot compareover_in_1) (bvnot $e331)))
(define-fun $e337 () (_ BitVec 1) (bvand (bvnot $e335) (bvnot $e336)))
(define-fun $e338 () (_ BitVec 1) (bvand $e55 (bvnot $e337)))
(define-fun $e339 () (_ BitVec 1) (bvand stbusy_1 (bvnot $e55)))
(define-fun $e340 () (_ BitVec 1) (bvand (bvnot $e338) (bvnot $e339)))
(define-fun $e341 () (_ BitVec 1) (bvand $e20 (bvnot $e331)))
(define-fun $e342 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e340)))
(define-fun $e343 () (_ BitVec 1) (bvand (bvnot $e341) (bvnot $e342)))
(define-fun $e344 () (_ BitVec 1) (bvand $e19 (bvnot $e331)))
(define-fun $e345 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e343)))
(define-fun $e346 () (_ BitVec 1) (bvand (bvnot $e344) (bvnot $e345)))
(define-fun $e347 () (_ BitVec 1) (bvand $e18 (bvnot $e331)))
(define-fun $e348 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e346)))
(define-fun $e349 () (_ BitVec 1) (bvand (bvnot $e347) (bvnot $e348)))
(define-fun $e350 () (_ BitVec 1) (bvand $e17 (bvnot $e331)))
(define-fun $e351 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e349)))
(define-fun $e352 () (_ BitVec 1) (bvand (bvnot $e350) (bvnot $e351)))
(define-fun $e353 () (_ BitVec 1) (bvand $e16 (bvnot $e331)))
(define-fun $e354 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e352)))
(define-fun $e355 () (_ BitVec 1) (bvand (bvnot $e353) (bvnot $e354)))
(define-fun $e356 () (_ BitVec 1) (bvand $e15 (bvnot $e331)))
(define-fun $e357 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e355)))
(define-fun $e358 () (_ BitVec 1) (bvand (bvnot $e356) (bvnot $e357)))
(define-fun $e359 () (_ BitVec 1) (bvand $e14 (bvnot $e331)))
(define-fun $e360 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e358)))
(define-fun $e361 () (_ BitVec 1) (bvand (bvnot $e359) (bvnot $e360)))
(define-fun $e362 () (_ BitVec 1) (bvand $e13 (bvnot $e331)))
(define-fun $e363 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e361)))
(define-fun $e364 () (_ BitVec 1) (bvand (bvnot $e362) (bvnot $e363)))
(define-fun $e365 () (_ BitVec 1) (bvand $e12 (bvnot $e331)))
(define-fun $e366 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e364)))
(define-fun $e367 () (_ BitVec 1) (bvand (bvnot $e365) (bvnot $e366)))
(define-fun $e368 () (_ BitVec 1) (bvand $e11 (bvnot $e334)))
(define-fun $e369 () (_ BitVec 1) (bvand (bvnot $e11) (bvnot $e367)))
(define-fun $e370 () (_ BitVec 1) (bvand (bvnot $e368) (bvnot $e369)))
(define-fun $e371 () (_ BitVec 1) (bvand stbusy_1 $e9))
(define-fun $e372 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e370)))
(define-fun $e373 () (_ BitVec 1) (bvand reset_1 stbusy_1))
(define-fun $e374 () (_ BitVec 1) (bvand (bvnot reset_1) $e372))
(define-fun $e375 () (_ BitVec 1) (bvand (bvnot reset_1) $e135))
(assert (not (= (bvnot $e373) #b0)))
(assert (not (= (bvnot $e329) #b0)))
(assert (not (= (bvnot $e330) #b0)))
(assert (not (= (bvnot $e306) #b0)))
(assert (not (= (bvnot $e307) #b0)))
(assert (not (= (bvnot $e264) #b0)))
(assert (not (= (bvnot $e265) #b0)))
(assert (not (= (bvnot $e219) #b0)))
(assert (not (= (bvnot $e220) #b0)))
(assert (not (= (bvnot $e177) #b0)))
(assert (not (= (bvnot $e178) #b0)))
(assert (not (= (bvnot $e136) #b0)))
(assert (not (= (bvnot $e92) #b0)))
(assert (not (= (bvnot $e93) #b0)))
(assert (not (= (bvnot $e52) #b0)))
(assert (not (= (bvnot $e53) #b0)))
(assert (not (= (bvnot $e374) #b0)))
(assert (not (= (bvnot $e375) #b0)))
(assert (not (= (bvnot $e134) #b0)))
(assert (not (= (bvnot $e371) #b0)))
(check-sat)
(exit)
