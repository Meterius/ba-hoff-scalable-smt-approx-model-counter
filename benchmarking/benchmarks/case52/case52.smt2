(set-logic QF_BV)
(declare-fun autoname_1 () (_ BitVec 1))
(declare-fun autoname_2 () (_ BitVec 1))
(declare-fun autoname_3 () (_ BitVec 1))
(declare-fun autoname_4 () (_ BitVec 1))
(declare-fun count_0 () (_ BitVec 4))
(declare-fun gamma_0 () (_ BitVec 8))
(declare-fun nloss_0 () (_ BitVec 1))
(declare-fun nloss_1 () (_ BitVec 1))
(declare-fun reset_1 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 8) (_ bv0 8))
(define-fun $e2 () (_ BitVec 8) (_ bv254 8))
(define-fun $e3 () (_ BitVec 8) (_ bv2 8))
(define-fun $e4 () (_ BitVec 8) (_ bv252 8))
(define-fun $e5 () (_ BitVec 8) (_ bv4 8))
(define-fun $e6 () (_ BitVec 8) (_ bv250 8))
(define-fun $e7 () (_ BitVec 8) (_ bv6 8))
(define-fun $e8 () (_ BitVec 8) (_ bv248 8))
(define-fun $e9 () (_ BitVec 8) (_ bv8 8))
(define-fun $e10 () (_ BitVec 8) (_ bv246 8))
(define-fun $e11 () (_ BitVec 8) (_ bv16 8))
(define-fun $e12 () (_ BitVec 4) (_ bv0 4))
(define-fun $e13 () (_ BitVec 1) (ite (= gamma_0 $e1) #b1 #b0))
(define-fun $e14 () (_ BitVec 1) (ite (= nloss_0 nloss_1) #b1 #b0))
(define-fun $e15 () (_ BitVec 1) (ite (= gamma_0 (bvnot $e2)) #b1 #b0))
(define-fun $e16 () (_ BitVec 1) (ite (= gamma_0 $e3) #b1 #b0))
(define-fun $e17 () (_ BitVec 1) (ite (= gamma_0 (bvnot $e4)) #b1 #b0))
(define-fun $e18 () (_ BitVec 1) (ite (= gamma_0 $e5) #b1 #b0))
(define-fun $e19 () (_ BitVec 1) (ite (= gamma_0 (bvnot $e6)) #b1 #b0))
(define-fun $e20 () (_ BitVec 1) (ite (= gamma_0 $e7) #b1 #b0))
(define-fun $e21 () (_ BitVec 1) (ite (= gamma_0 (bvnot $e8)) #b1 #b0))
(define-fun $e22 () (_ BitVec 1) (ite (= gamma_0 $e9) #b1 #b0))
(define-fun $e23 () (_ BitVec 1) (ite (= gamma_0 (bvnot $e10)) #b1 #b0))
(define-fun $e24 () (_ BitVec 1) (ite (= gamma_0 $e11) #b1 #b0))
(define-fun $e25 () (_ BitVec 1) (ite (= count_0 $e12) #b1 #b0))
(define-fun $e26 () (_ BitVec 1) (bvand autoname_4 (bvnot nloss_1)))
(define-fun $e27 () (_ BitVec 1) (bvand (bvnot autoname_4) (bvnot $e14)))
(define-fun $e28 () (_ BitVec 1) (bvand (bvnot $e26) (bvnot $e27)))
(define-fun $e29 () (_ BitVec 1) (bvand autoname_3 (bvnot nloss_1)))
(define-fun $e30 () (_ BitVec 1) (bvand (bvnot autoname_3) (bvnot $e28)))
(define-fun $e31 () (_ BitVec 1) (bvand (bvnot $e29) (bvnot $e30)))
(define-fun $e32 () (_ BitVec 1) (bvand autoname_2 (bvnot nloss_1)))
(define-fun $e33 () (_ BitVec 1) (bvand (bvnot autoname_2) (bvnot $e31)))
(define-fun $e34 () (_ BitVec 1) (bvand (bvnot $e32) (bvnot $e33)))
(define-fun $e35 () (_ BitVec 1) (bvand autoname_1 (bvnot nloss_1)))
(define-fun $e36 () (_ BitVec 1) (bvand (bvnot autoname_1) (bvnot $e34)))
(define-fun $e37 () (_ BitVec 1) (bvand (bvnot $e35) (bvnot $e36)))
(define-fun $e38 () (_ BitVec 1) (bvand (bvnot nloss_1) $e25))
(define-fun $e39 () (_ BitVec 1) (bvand (bvnot $e25) (bvnot $e37)))
(define-fun $e40 () (_ BitVec 1) (bvand (bvnot $e38) (bvnot $e39)))
(define-fun $e41 () (_ BitVec 1) (bvand $e24 (bvnot $e40)))
(define-fun $e42 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e24)))
(define-fun $e43 () (_ BitVec 1) (bvand (bvnot $e41) (bvnot $e42)))
(define-fun $e44 () (_ BitVec 1) (bvand (bvnot $e14) $e23))
(define-fun $e45 () (_ BitVec 1) (bvand (bvnot $e23) (bvnot $e43)))
(define-fun $e46 () (_ BitVec 1) (bvand (bvnot $e44) (bvnot $e45)))
(define-fun $e47 () (_ BitVec 1) (bvand (bvnot $e14) $e22))
(define-fun $e48 () (_ BitVec 1) (bvand (bvnot $e22) (bvnot $e46)))
(define-fun $e49 () (_ BitVec 1) (bvand (bvnot $e47) (bvnot $e48)))
(define-fun $e50 () (_ BitVec 1) (bvand (bvnot $e14) $e21))
(define-fun $e51 () (_ BitVec 1) (bvand (bvnot $e21) (bvnot $e49)))
(define-fun $e52 () (_ BitVec 1) (bvand (bvnot $e50) (bvnot $e51)))
(define-fun $e53 () (_ BitVec 1) (bvand (bvnot $e14) $e20))
(define-fun $e54 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e52)))
(define-fun $e55 () (_ BitVec 1) (bvand (bvnot $e53) (bvnot $e54)))
(define-fun $e56 () (_ BitVec 1) (bvand (bvnot $e14) $e19))
(define-fun $e57 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e55)))
(define-fun $e58 () (_ BitVec 1) (bvand (bvnot $e56) (bvnot $e57)))
(define-fun $e59 () (_ BitVec 1) (bvand (bvnot $e14) $e18))
(define-fun $e60 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e58)))
(define-fun $e61 () (_ BitVec 1) (bvand (bvnot $e59) (bvnot $e60)))
(define-fun $e62 () (_ BitVec 1) (bvand (bvnot $e14) $e17))
(define-fun $e63 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e61)))
(define-fun $e64 () (_ BitVec 1) (bvand (bvnot $e62) (bvnot $e63)))
(define-fun $e65 () (_ BitVec 1) (bvand (bvnot $e14) $e16))
(define-fun $e66 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e64)))
(define-fun $e67 () (_ BitVec 1) (bvand (bvnot $e65) (bvnot $e66)))
(define-fun $e68 () (_ BitVec 1) (bvand nloss_1 $e15))
(define-fun $e69 () (_ BitVec 1) (bvand (bvnot $e15) (bvnot $e67)))
(define-fun $e70 () (_ BitVec 1) (bvand (bvnot $e68) (bvnot $e69)))
(define-fun $e71 () (_ BitVec 1) (bvand $e13 (bvnot $e14)))
(define-fun $e72 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e70)))
(define-fun $e73 () (_ BitVec 1) (bvand (bvnot $e71) (bvnot $e72)))
(define-fun $e74 () (_ BitVec 1) (bvand nloss_1 reset_1))
(define-fun $e75 () (_ BitVec 1) (bvand (bvnot reset_1) (bvnot $e73)))
(assert (not (= (bvnot $e74) #b0)))
(assert (not (= (bvnot $e75) #b0)))
(check-sat)
(exit)
