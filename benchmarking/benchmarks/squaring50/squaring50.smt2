(set-logic QF_BV)
(declare-fun comparehi_0 () (_ BitVec 1))
(declare-fun comparehi_1 () (_ BitVec 1))
(declare-fun comparehi_2 () (_ BitVec 1))
(declare-fun comparelo_0 () (_ BitVec 1))
(declare-fun comparelo_1 () (_ BitVec 1))
(declare-fun comparelo_2 () (_ BitVec 1))
(declare-fun compareover_in_1 () (_ BitVec 1))
(declare-fun compareover_in_2 () (_ BitVec 1))
(declare-fun counteroverflow_1 () (_ BitVec 1))
(declare-fun counteroverflow_2 () (_ BitVec 1))
(declare-fun fit_led2_0 () (_ BitVec 1))
(declare-fun fit_led2_1 () (_ BitVec 1))
(declare-fun fit_led2_2 () (_ BitVec 1))
(declare-fun forcehi_0 () (_ BitVec 1))
(declare-fun forcehi_1 () (_ BitVec 1))
(declare-fun forcehi_2 () (_ BitVec 1))
(declare-fun forcelo_0 () (_ BitVec 1))
(declare-fun forcelo_1 () (_ BitVec 1))
(declare-fun forcelo_2 () (_ BitVec 1))
(declare-fun loadcounter_0 () (_ BitVec 1))
(declare-fun loadcounter_1 () (_ BitVec 1))
(declare-fun loadcounter_2 () (_ BitVec 1))
(declare-fun readport_0 () (_ BitVec 1))
(declare-fun readport_1 () (_ BitVec 1))
(declare-fun readport_2 () (_ BitVec 1))
(declare-fun reset_1 () (_ BitVec 1))
(declare-fun reset_2 () (_ BitVec 1))
(declare-fun sreg0_0 () (_ BitVec 4))
(declare-fun sreg0_1 () (_ BitVec 4))
(declare-fun startselftest_0 () (_ BitVec 1))
(declare-fun startselftest_1 () (_ BitVec 1))
(declare-fun stbusy_0 () (_ BitVec 1))
(declare-fun stbusy_1 () (_ BitVec 1))
(declare-fun stbusy_2 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 4) (_ bv14 4))
(define-fun $e2 () (_ BitVec 4) (_ bv0 4))
(define-fun $e3 () (_ BitVec 4) (_ bv2 4))
(define-fun $e4 () (_ BitVec 4) (_ bv12 4))
(define-fun $e5 () (_ BitVec 4) (_ bv4 4))
(define-fun $e6 () (_ BitVec 4) (_ bv10 4))
(define-fun $e7 () (_ BitVec 4) (_ bv6 4))
(define-fun $e8 () (_ BitVec 4) (_ bv8 4))
(define-fun $e9 () (_ BitVec 1) (bvand (bvnot readport_2) (bvnot stbusy_2)))
(define-fun $e10 () (_ BitVec 1) (bvand (bvnot loadcounter_2) $e9))
(define-fun $e11 () (_ BitVec 1) (bvand (bvnot forcelo_2) $e10))
(define-fun $e12 () (_ BitVec 1) (bvand (bvnot forcehi_2) $e11))
(define-fun $e13 () (_ BitVec 1) (bvand fit_led2_2 $e12))
(define-fun $e14 () (_ BitVec 1) (bvand (bvnot comparelo_2) $e13))
(define-fun $e15 () (_ BitVec 1) (bvand (bvnot comparehi_2) $e14))
(define-fun $e16 () (_ BitVec 1) (ite (= sreg0_1 $e2) #b1 #b0))
(define-fun $e17 () (_ BitVec 1) (bvand (bvnot comparehi_1) (bvnot comparehi_2)))
(define-fun $e18 () (_ BitVec 1) (bvand comparehi_1 comparehi_2))
(define-fun $e19 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e18)))
(define-fun $e20 () (_ BitVec 1) (bvand (bvnot comparelo_1) (bvnot comparelo_2)))
(define-fun $e21 () (_ BitVec 1) (bvand comparelo_1 comparelo_2))
(define-fun $e22 () (_ BitVec 1) (bvand (bvnot $e20) (bvnot $e21)))
(define-fun $e23 () (_ BitVec 1) (bvand (bvnot forcehi_1) (bvnot forcehi_2)))
(define-fun $e24 () (_ BitVec 1) (bvand forcehi_1 forcehi_2))
(define-fun $e25 () (_ BitVec 1) (bvand (bvnot $e23) (bvnot $e24)))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot forcelo_1) (bvnot forcelo_2)))
(define-fun $e27 () (_ BitVec 1) (bvand forcelo_1 forcelo_2))
(define-fun $e28 () (_ BitVec 1) (bvand (bvnot $e26) (bvnot $e27)))
(define-fun $e29 () (_ BitVec 1) (bvand (bvnot loadcounter_1) (bvnot loadcounter_2)))
(define-fun $e30 () (_ BitVec 1) (bvand loadcounter_1 loadcounter_2))
(define-fun $e31 () (_ BitVec 1) (bvand (bvnot $e29) (bvnot $e30)))
(define-fun $e32 () (_ BitVec 1) (bvand (bvnot readport_1) (bvnot readport_2)))
(define-fun $e33 () (_ BitVec 1) (bvand readport_1 readport_2))
(define-fun $e34 () (_ BitVec 1) (bvand (bvnot $e32) (bvnot $e33)))
(define-fun $e35 () (_ BitVec 1) (bvand (bvnot stbusy_2) (bvnot $e34)))
(define-fun $e36 () (_ BitVec 1) (bvand (bvnot $e31) $e35))
(define-fun $e37 () (_ BitVec 1) (bvand (bvnot $e28) $e36))
(define-fun $e38 () (_ BitVec 1) (bvand (bvnot $e25) $e37))
(define-fun $e39 () (_ BitVec 1) (bvand fit_led2_2 $e38))
(define-fun $e40 () (_ BitVec 1) (bvand (bvnot $e22) $e39))
(define-fun $e41 () (_ BitVec 1) (bvand (bvnot $e19) $e40))
(define-fun $e42 () (_ BitVec 1) (ite (= sreg0_1 (bvnot $e1)) #b1 #b0))
(define-fun $e43 () (_ BitVec 1) (bvand stbusy_2 (bvnot $e34)))
(define-fun $e44 () (_ BitVec 1) (bvand loadcounter_2 $e43))
(define-fun $e45 () (_ BitVec 1) (bvand (bvnot $e28) $e44))
(define-fun $e46 () (_ BitVec 1) (bvand (bvnot $e25) $e45))
(define-fun $e47 () (_ BitVec 1) (bvand (bvnot fit_led2_2) $e46))
(define-fun $e48 () (_ BitVec 1) (bvand (bvnot fit_led2_1) (bvnot fit_led2_2)))
(define-fun $e49 () (_ BitVec 1) (bvand fit_led2_1 fit_led2_2))
(define-fun $e50 () (_ BitVec 1) (bvand (bvnot $e48) (bvnot $e49)))
(define-fun $e51 () (_ BitVec 1) (bvand (bvnot stbusy_1) (bvnot stbusy_2)))
(define-fun $e52 () (_ BitVec 1) (bvand stbusy_1 stbusy_2))
(define-fun $e53 () (_ BitVec 1) (bvand (bvnot $e51) (bvnot $e52)))
(define-fun $e54 () (_ BitVec 1) (bvand (bvnot $e34) (bvnot $e53)))
(define-fun $e55 () (_ BitVec 1) (bvand (bvnot $e31) $e54))
(define-fun $e56 () (_ BitVec 1) (bvand (bvnot $e28) $e55))
(define-fun $e57 () (_ BitVec 1) (bvand (bvnot $e25) $e56))
(define-fun $e58 () (_ BitVec 1) (bvand (bvnot $e50) $e57))
(define-fun $e59 () (_ BitVec 1) (bvand startselftest_1 (bvnot $e47)))
(define-fun $e60 () (_ BitVec 1) (bvand (bvnot startselftest_1) (bvnot $e58)))
(define-fun $e61 () (_ BitVec 1) (bvand (bvnot $e59) (bvnot $e60)))
(define-fun $e62 () (_ BitVec 1) (bvand (bvnot $e22) $e61))
(define-fun $e63 () (_ BitVec 1) (ite (= sreg0_1 $e3) #b1 #b0))
(define-fun $e64 () (_ BitVec 1) (bvand (bvnot loadcounter_2) $e54))
(define-fun $e65 () (_ BitVec 1) (bvand (bvnot $e28) $e64))
(define-fun $e66 () (_ BitVec 1) (bvand (bvnot $e25) $e65))
(define-fun $e67 () (_ BitVec 1) (bvand (bvnot $e50) $e66))
(define-fun $e68 () (_ BitVec 1) (bvand (bvnot $e22) $e67))
(define-fun $e69 () (_ BitVec 1) (ite (= sreg0_1 (bvnot $e4)) #b1 #b0))
(define-fun $e70 () (_ BitVec 1) (bvand forcelo_2 $e55))
(define-fun $e71 () (_ BitVec 1) (bvand (bvnot $e25) $e70))
(define-fun $e72 () (_ BitVec 1) (bvand (bvnot $e50) $e71))
(define-fun $e73 () (_ BitVec 1) (bvand (bvnot $e22) $e72))
(define-fun $e74 () (_ BitVec 1) (ite (= sreg0_1 $e5) #b1 #b0))
(define-fun $e75 () (_ BitVec 1) (bvand readport_2 (bvnot $e53)))
(define-fun $e76 () (_ BitVec 1) (bvand counteroverflow_2 (bvnot $e75)))
(define-fun $e77 () (_ BitVec 1) (bvand (bvnot counteroverflow_2) $e53))
(define-fun $e78 () (_ BitVec 1) (bvand (bvnot $e76) (bvnot $e77)))
(define-fun $e79 () (_ BitVec 1) (bvand counteroverflow_2 $e75))
(define-fun $e80 () (_ BitVec 1) (bvand $e34 (bvnot $e79)))
(define-fun $e81 () (_ BitVec 1) (bvand (bvnot $e34) (bvnot $e78)))
(define-fun $e82 () (_ BitVec 1) (bvand (bvnot $e80) (bvnot $e81)))
(define-fun $e83 () (_ BitVec 1) (bvand (bvnot $e31) $e82))
(define-fun $e84 () (_ BitVec 1) (bvand (bvnot $e28) $e83))
(define-fun $e85 () (_ BitVec 1) (bvand (bvnot $e25) $e84))
(define-fun $e86 () (_ BitVec 1) (bvand (bvnot $e50) $e85))
(define-fun $e87 () (_ BitVec 1) (bvand (bvnot $e22) $e86))
(define-fun $e88 () (_ BitVec 1) (ite (= sreg0_1 (bvnot $e6)) #b1 #b0))
(define-fun $e89 () (_ BitVec 1) (bvand (bvnot readport_2) (bvnot $e53)))
(define-fun $e90 () (_ BitVec 1) (bvand (bvnot $e31) $e89))
(define-fun $e91 () (_ BitVec 1) (bvand (bvnot $e28) $e90))
(define-fun $e92 () (_ BitVec 1) (bvand (bvnot $e25) $e91))
(define-fun $e93 () (_ BitVec 1) (bvand (bvnot $e50) $e92))
(define-fun $e94 () (_ BitVec 1) (bvand comparelo_2 $e93))
(define-fun $e95 () (_ BitVec 1) (ite (= sreg0_1 $e6) #b1 #b0))
(define-fun $e96 () (_ BitVec 1) (bvand loadcounter_2 $e54))
(define-fun $e97 () (_ BitVec 1) (bvand (bvnot forcelo_2) $e96))
(define-fun $e98 () (_ BitVec 1) (bvand (bvnot $e25) $e97))
(define-fun $e99 () (_ BitVec 1) (bvand compareover_in_2 (bvnot $e98)))
(define-fun $e100 () (_ BitVec 1) (bvand (bvnot compareover_in_2) (bvnot $e57)))
(define-fun $e101 () (_ BitVec 1) (bvand (bvnot $e99) (bvnot $e100)))
(define-fun $e102 () (_ BitVec 1) (bvand (bvnot $e50) $e101))
(define-fun $e103 () (_ BitVec 1) (bvand (bvnot comparelo_2) $e102))
(define-fun $e104 () (_ BitVec 1) (ite (= sreg0_1 $e7) #b1 #b0))
(define-fun $e105 () (_ BitVec 1) (ite (= sreg0_1 (bvnot $e8)) #b1 #b0))
(define-fun $e106 () (_ BitVec 1) (bvand forcehi_2 $e56))
(define-fun $e107 () (_ BitVec 1) (bvand (bvnot $e50) $e106))
(define-fun $e108 () (_ BitVec 1) (bvand (bvnot $e22) $e107))
(define-fun $e109 () (_ BitVec 1) (ite (= sreg0_1 $e8) #b1 #b0))
(define-fun $e110 () (_ BitVec 1) (ite (= sreg0_1 (bvnot $e7)) #b1 #b0))
(define-fun $e111 () (_ BitVec 1) (bvand (bvnot $e22) $e93))
(define-fun $e112 () (_ BitVec 1) (bvand comparehi_2 $e111))
(define-fun $e113 () (_ BitVec 1) (ite (= sreg0_1 (bvnot $e5)) #b1 #b0))
(define-fun $e114 () (_ BitVec 1) (bvand (bvnot forcehi_2) $e37))
(define-fun $e115 () (_ BitVec 1) (bvand compareover_in_2 (bvnot $e114)))
(define-fun $e116 () (_ BitVec 1) (bvand (bvnot $e100) (bvnot $e115)))
(define-fun $e117 () (_ BitVec 1) (bvand compareover_in_2 $e114))
(define-fun $e118 () (_ BitVec 1) (bvand $e50 (bvnot $e117)))
(define-fun $e119 () (_ BitVec 1) (bvand (bvnot $e50) (bvnot $e116)))
(define-fun $e120 () (_ BitVec 1) (bvand (bvnot $e118) (bvnot $e119)))
(define-fun $e121 () (_ BitVec 1) (bvand (bvnot compareover_in_2) $e57))
(define-fun $e122 () (_ BitVec 1) (bvand (bvnot $e50) $e121))
(define-fun $e123 () (_ BitVec 1) (bvand fit_led2_2 (bvnot $e120)))
(define-fun $e124 () (_ BitVec 1) (bvand (bvnot fit_led2_2) (bvnot $e122)))
(define-fun $e125 () (_ BitVec 1) (bvand (bvnot $e123) (bvnot $e124)))
(define-fun $e126 () (_ BitVec 1) (bvand $e113 (bvnot $e125)))
(define-fun $e127 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e113)))
(define-fun $e128 () (_ BitVec 1) (bvand (bvnot $e126) (bvnot $e127)))
(define-fun $e129 () (_ BitVec 1) (bvand $e13 (bvnot $e113)))
(define-fun $e130 () (_ BitVec 1) (bvand $e22 (bvnot $e129)))
(define-fun $e131 () (_ BitVec 1) (bvand (bvnot $e22) (bvnot $e128)))
(define-fun $e132 () (_ BitVec 1) (bvand (bvnot $e130) (bvnot $e131)))
(define-fun $e133 () (_ BitVec 1) (bvand $e113 $e125))
(define-fun $e134 () (_ BitVec 1) (bvand (bvnot $e22) $e133))
(define-fun $e135 () (_ BitVec 1) (bvand comparelo_2 (bvnot $e134)))
(define-fun $e136 () (_ BitVec 1) (bvand (bvnot comparelo_2) (bvnot $e132)))
(define-fun $e137 () (_ BitVec 1) (bvand (bvnot $e135) (bvnot $e136)))
(define-fun $e138 () (_ BitVec 1) (bvand $e110 (bvnot $e112)))
(define-fun $e139 () (_ BitVec 1) (bvand (bvnot $e110) (bvnot $e137)))
(define-fun $e140 () (_ BitVec 1) (bvand (bvnot $e138) (bvnot $e139)))
(define-fun $e141 () (_ BitVec 1) (bvand (bvnot $e87) $e109))
(define-fun $e142 () (_ BitVec 1) (bvand (bvnot $e109) (bvnot $e140)))
(define-fun $e143 () (_ BitVec 1) (bvand (bvnot $e141) (bvnot $e142)))
(define-fun $e144 () (_ BitVec 1) (bvand $e105 (bvnot $e108)))
(define-fun $e145 () (_ BitVec 1) (bvand (bvnot $e105) (bvnot $e143)))
(define-fun $e146 () (_ BitVec 1) (bvand (bvnot $e144) (bvnot $e145)))
(define-fun $e147 () (_ BitVec 1) (bvand (bvnot $e68) $e104))
(define-fun $e148 () (_ BitVec 1) (bvand (bvnot $e104) (bvnot $e146)))
(define-fun $e149 () (_ BitVec 1) (bvand (bvnot $e147) (bvnot $e148)))
(define-fun $e150 () (_ BitVec 1) (bvand $e95 (bvnot $e103)))
(define-fun $e151 () (_ BitVec 1) (bvand (bvnot $e95) (bvnot $e149)))
(define-fun $e152 () (_ BitVec 1) (bvand (bvnot $e150) (bvnot $e151)))
(define-fun $e153 () (_ BitVec 1) (bvand $e88 (bvnot $e94)))
(define-fun $e154 () (_ BitVec 1) (bvand (bvnot $e88) (bvnot $e152)))
(define-fun $e155 () (_ BitVec 1) (bvand (bvnot $e153) (bvnot $e154)))
(define-fun $e156 () (_ BitVec 1) (bvand $e74 (bvnot $e87)))
(define-fun $e157 () (_ BitVec 1) (bvand (bvnot $e74) (bvnot $e155)))
(define-fun $e158 () (_ BitVec 1) (bvand (bvnot $e156) (bvnot $e157)))
(define-fun $e159 () (_ BitVec 1) (bvand $e69 (bvnot $e73)))
(define-fun $e160 () (_ BitVec 1) (bvand (bvnot $e69) (bvnot $e158)))
(define-fun $e161 () (_ BitVec 1) (bvand (bvnot $e159) (bvnot $e160)))
(define-fun $e162 () (_ BitVec 1) (bvand $e63 (bvnot $e68)))
(define-fun $e163 () (_ BitVec 1) (bvand (bvnot $e63) (bvnot $e161)))
(define-fun $e164 () (_ BitVec 1) (bvand (bvnot $e162) (bvnot $e163)))
(define-fun $e165 () (_ BitVec 1) (bvand $e42 (bvnot $e62)))
(define-fun $e166 () (_ BitVec 1) (bvand (bvnot $e42) (bvnot $e164)))
(define-fun $e167 () (_ BitVec 1) (bvand (bvnot $e165) (bvnot $e166)))
(define-fun $e168 () (_ BitVec 1) (bvand (bvnot $e109) $e140))
(define-fun $e169 () (_ BitVec 1) (bvand (bvnot $e105) $e168))
(define-fun $e170 () (_ BitVec 1) (bvand (bvnot $e104) $e169))
(define-fun $e171 () (_ BitVec 1) (bvand (bvnot $e95) $e170))
(define-fun $e172 () (_ BitVec 1) (bvand (bvnot $e88) $e171))
(define-fun $e173 () (_ BitVec 1) (bvand (bvnot $e74) $e172))
(define-fun $e174 () (_ BitVec 1) (bvand (bvnot $e69) $e173))
(define-fun $e175 () (_ BitVec 1) (bvand (bvnot $e63) $e174))
(define-fun $e176 () (_ BitVec 1) (bvand (bvnot $e42) $e175))
(define-fun $e177 () (_ BitVec 1) (bvand $e19 (bvnot $e176)))
(define-fun $e178 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e167)))
(define-fun $e179 () (_ BitVec 1) (bvand (bvnot $e177) (bvnot $e178)))
(define-fun $e180 () (_ BitVec 1) (bvand $e16 (bvnot $e41)))
(define-fun $e181 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e179)))
(define-fun $e182 () (_ BitVec 1) (bvand (bvnot $e180) (bvnot $e181)))
(define-fun $e183 () (_ BitVec 1) (bvand $e110 $e112))
(define-fun $e184 () (_ BitVec 1) (bvand (bvnot $e109) (bvnot $e183)))
(define-fun $e185 () (_ BitVec 1) (bvand (bvnot $e141) (bvnot $e184)))
(define-fun $e186 () (_ BitVec 1) (bvand (bvnot $e105) (bvnot $e185)))
(define-fun $e187 () (_ BitVec 1) (bvand (bvnot $e144) (bvnot $e186)))
(define-fun $e188 () (_ BitVec 1) (bvand (bvnot $e104) (bvnot $e187)))
(define-fun $e189 () (_ BitVec 1) (bvand (bvnot $e147) (bvnot $e188)))
(define-fun $e190 () (_ BitVec 1) (bvand (bvnot $e95) (bvnot $e189)))
(define-fun $e191 () (_ BitVec 1) (bvand (bvnot $e150) (bvnot $e190)))
(define-fun $e192 () (_ BitVec 1) (bvand (bvnot $e88) (bvnot $e191)))
(define-fun $e193 () (_ BitVec 1) (bvand (bvnot $e153) (bvnot $e192)))
(define-fun $e194 () (_ BitVec 1) (bvand (bvnot $e74) (bvnot $e193)))
(define-fun $e195 () (_ BitVec 1) (bvand (bvnot $e156) (bvnot $e194)))
(define-fun $e196 () (_ BitVec 1) (bvand (bvnot $e69) (bvnot $e195)))
(define-fun $e197 () (_ BitVec 1) (bvand (bvnot $e159) (bvnot $e196)))
(define-fun $e198 () (_ BitVec 1) (bvand (bvnot $e63) (bvnot $e197)))
(define-fun $e199 () (_ BitVec 1) (bvand (bvnot $e162) (bvnot $e198)))
(define-fun $e200 () (_ BitVec 1) (bvand (bvnot $e42) (bvnot $e199)))
(define-fun $e201 () (_ BitVec 1) (bvand (bvnot $e165) (bvnot $e200)))
(define-fun $e202 () (_ BitVec 1) (bvand (bvnot $e109) $e183))
(define-fun $e203 () (_ BitVec 1) (bvand (bvnot $e105) $e202))
(define-fun $e204 () (_ BitVec 1) (bvand (bvnot $e104) $e203))
(define-fun $e205 () (_ BitVec 1) (bvand (bvnot $e95) $e204))
(define-fun $e206 () (_ BitVec 1) (bvand (bvnot $e88) $e205))
(define-fun $e207 () (_ BitVec 1) (bvand (bvnot $e74) $e206))
(define-fun $e208 () (_ BitVec 1) (bvand (bvnot $e69) $e207))
(define-fun $e209 () (_ BitVec 1) (bvand (bvnot $e63) $e208))
(define-fun $e210 () (_ BitVec 1) (bvand (bvnot $e42) $e209))
(define-fun $e211 () (_ BitVec 1) (bvand $e19 (bvnot $e210)))
(define-fun $e212 () (_ BitVec 1) (bvand (bvnot $e19) (bvnot $e201)))
(define-fun $e213 () (_ BitVec 1) (bvand (bvnot $e211) (bvnot $e212)))
(define-fun $e214 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e213)))
(define-fun $e215 () (_ BitVec 1) (bvand (bvnot $e180) (bvnot $e214)))
(define-fun $e216 () (_ BitVec 1) (bvand comparehi_2 (bvnot $e215)))
(define-fun $e217 () (_ BitVec 1) (bvand (bvnot comparehi_2) (bvnot $e182)))
(define-fun $e218 () (_ BitVec 1) (bvand (bvnot $e216) (bvnot $e217)))
(define-fun $e219 () (_ BitVec 1) (bvand reset_2 (bvnot $e15)))
(define-fun $e220 () (_ BitVec 1) (bvand (bvnot reset_2) (bvnot $e218)))
(define-fun $e221 () (_ BitVec 1) (bvand (bvnot $e219) (bvnot $e220)))
(define-fun $e222 () (_ BitVec 1) (bvand (bvnot stbusy_1) $e221))
(define-fun $e223 () (_ BitVec 1) (bvand (bvnot readport_1) $e222))
(define-fun $e224 () (_ BitVec 1) (bvand (bvnot loadcounter_1) $e223))
(define-fun $e225 () (_ BitVec 1) (bvand (bvnot forcelo_1) $e224))
(define-fun $e226 () (_ BitVec 1) (bvand (bvnot forcehi_1) $e225))
(define-fun $e227 () (_ BitVec 1) (bvand fit_led2_1 $e226))
(define-fun $e228 () (_ BitVec 1) (bvand (bvnot comparelo_1) $e227))
(define-fun $e229 () (_ BitVec 1) (bvand (bvnot comparehi_1) $e228))
(define-fun $e230 () (_ BitVec 1) (ite (= sreg0_0 $e2) #b1 #b0))
(define-fun $e231 () (_ BitVec 1) (bvand (bvnot comparehi_0) (bvnot comparehi_1)))
(define-fun $e232 () (_ BitVec 1) (bvand comparehi_0 comparehi_1))
(define-fun $e233 () (_ BitVec 1) (bvand (bvnot $e231) (bvnot $e232)))
(define-fun $e234 () (_ BitVec 1) (bvand (bvnot comparelo_0) (bvnot comparelo_1)))
(define-fun $e235 () (_ BitVec 1) (bvand comparelo_0 comparelo_1))
(define-fun $e236 () (_ BitVec 1) (bvand (bvnot $e234) (bvnot $e235)))
(define-fun $e237 () (_ BitVec 1) (bvand (bvnot forcehi_0) (bvnot forcehi_1)))
(define-fun $e238 () (_ BitVec 1) (bvand forcehi_0 forcehi_1))
(define-fun $e239 () (_ BitVec 1) (bvand (bvnot $e237) (bvnot $e238)))
(define-fun $e240 () (_ BitVec 1) (bvand (bvnot forcelo_0) (bvnot forcelo_1)))
(define-fun $e241 () (_ BitVec 1) (bvand forcelo_0 forcelo_1))
(define-fun $e242 () (_ BitVec 1) (bvand (bvnot $e240) (bvnot $e241)))
(define-fun $e243 () (_ BitVec 1) (bvand (bvnot loadcounter_0) (bvnot loadcounter_1)))
(define-fun $e244 () (_ BitVec 1) (bvand loadcounter_0 loadcounter_1))
(define-fun $e245 () (_ BitVec 1) (bvand (bvnot $e243) (bvnot $e244)))
(define-fun $e246 () (_ BitVec 1) (bvand (bvnot readport_0) (bvnot readport_1)))
(define-fun $e247 () (_ BitVec 1) (bvand readport_0 readport_1))
(define-fun $e248 () (_ BitVec 1) (bvand (bvnot $e246) (bvnot $e247)))
(define-fun $e249 () (_ BitVec 1) (bvand $e222 (bvnot $e248)))
(define-fun $e250 () (_ BitVec 1) (bvand (bvnot $e245) $e249))
(define-fun $e251 () (_ BitVec 1) (bvand (bvnot $e242) $e250))
(define-fun $e252 () (_ BitVec 1) (bvand (bvnot $e239) $e251))
(define-fun $e253 () (_ BitVec 1) (bvand fit_led2_1 $e252))
(define-fun $e254 () (_ BitVec 1) (bvand (bvnot $e236) $e253))
(define-fun $e255 () (_ BitVec 1) (bvand (bvnot $e233) $e254))
(define-fun $e256 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e1)) #b1 #b0))
(define-fun $e257 () (_ BitVec 1) (bvand stbusy_1 $e221))
(define-fun $e258 () (_ BitVec 1) (bvand (bvnot $e248) $e257))
(define-fun $e259 () (_ BitVec 1) (bvand loadcounter_1 $e258))
(define-fun $e260 () (_ BitVec 1) (bvand (bvnot $e242) $e259))
(define-fun $e261 () (_ BitVec 1) (bvand (bvnot $e239) $e260))
(define-fun $e262 () (_ BitVec 1) (bvand (bvnot fit_led2_1) $e261))
(define-fun $e263 () (_ BitVec 1) (bvand (bvnot fit_led2_0) (bvnot fit_led2_1)))
(define-fun $e264 () (_ BitVec 1) (bvand fit_led2_0 fit_led2_1))
(define-fun $e265 () (_ BitVec 1) (bvand (bvnot $e263) (bvnot $e264)))
(define-fun $e266 () (_ BitVec 1) (bvand (bvnot stbusy_0) (bvnot stbusy_1)))
(define-fun $e267 () (_ BitVec 1) (bvand stbusy_0 stbusy_1))
(define-fun $e268 () (_ BitVec 1) (bvand (bvnot $e266) (bvnot $e267)))
(define-fun $e269 () (_ BitVec 1) (bvand $e221 (bvnot $e268)))
(define-fun $e270 () (_ BitVec 1) (bvand (bvnot $e248) $e269))
(define-fun $e271 () (_ BitVec 1) (bvand (bvnot $e245) $e270))
(define-fun $e272 () (_ BitVec 1) (bvand (bvnot $e242) $e271))
(define-fun $e273 () (_ BitVec 1) (bvand (bvnot $e239) $e272))
(define-fun $e274 () (_ BitVec 1) (bvand (bvnot $e265) $e273))
(define-fun $e275 () (_ BitVec 1) (bvand startselftest_0 (bvnot $e262)))
(define-fun $e276 () (_ BitVec 1) (bvand (bvnot startselftest_0) (bvnot $e274)))
(define-fun $e277 () (_ BitVec 1) (bvand (bvnot $e275) (bvnot $e276)))
(define-fun $e278 () (_ BitVec 1) (bvand (bvnot $e236) $e277))
(define-fun $e279 () (_ BitVec 1) (ite (= sreg0_0 $e3) #b1 #b0))
(define-fun $e280 () (_ BitVec 1) (bvand (bvnot loadcounter_1) $e270))
(define-fun $e281 () (_ BitVec 1) (bvand (bvnot $e242) $e280))
(define-fun $e282 () (_ BitVec 1) (bvand (bvnot $e239) $e281))
(define-fun $e283 () (_ BitVec 1) (bvand (bvnot $e265) $e282))
(define-fun $e284 () (_ BitVec 1) (bvand (bvnot $e236) $e283))
(define-fun $e285 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e4)) #b1 #b0))
(define-fun $e286 () (_ BitVec 1) (bvand forcelo_1 $e271))
(define-fun $e287 () (_ BitVec 1) (bvand (bvnot $e239) $e286))
(define-fun $e288 () (_ BitVec 1) (bvand (bvnot $e265) $e287))
(define-fun $e289 () (_ BitVec 1) (bvand (bvnot $e236) $e288))
(define-fun $e290 () (_ BitVec 1) (ite (= sreg0_0 $e5) #b1 #b0))
(define-fun $e291 () (_ BitVec 1) (bvand readport_1 $e269))
(define-fun $e292 () (_ BitVec 1) (bvand counteroverflow_1 (bvnot $e291)))
(define-fun $e293 () (_ BitVec 1) (bvand (bvnot counteroverflow_1) (bvnot $e269)))
(define-fun $e294 () (_ BitVec 1) (bvand (bvnot $e292) (bvnot $e293)))
(define-fun $e295 () (_ BitVec 1) (bvand counteroverflow_1 $e291))
(define-fun $e296 () (_ BitVec 1) (bvand $e248 (bvnot $e295)))
(define-fun $e297 () (_ BitVec 1) (bvand (bvnot $e248) (bvnot $e294)))
(define-fun $e298 () (_ BitVec 1) (bvand (bvnot $e296) (bvnot $e297)))
(define-fun $e299 () (_ BitVec 1) (bvand (bvnot $e245) $e298))
(define-fun $e300 () (_ BitVec 1) (bvand (bvnot $e242) $e299))
(define-fun $e301 () (_ BitVec 1) (bvand (bvnot $e239) $e300))
(define-fun $e302 () (_ BitVec 1) (bvand (bvnot $e265) $e301))
(define-fun $e303 () (_ BitVec 1) (bvand (bvnot $e236) $e302))
(define-fun $e304 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e6)) #b1 #b0))
(define-fun $e305 () (_ BitVec 1) (bvand (bvnot readport_1) $e269))
(define-fun $e306 () (_ BitVec 1) (bvand (bvnot $e245) $e305))
(define-fun $e307 () (_ BitVec 1) (bvand (bvnot $e242) $e306))
(define-fun $e308 () (_ BitVec 1) (bvand (bvnot $e239) $e307))
(define-fun $e309 () (_ BitVec 1) (bvand (bvnot $e265) $e308))
(define-fun $e310 () (_ BitVec 1) (bvand comparelo_1 $e309))
(define-fun $e311 () (_ BitVec 1) (ite (= sreg0_0 $e6) #b1 #b0))
(define-fun $e312 () (_ BitVec 1) (bvand loadcounter_1 $e270))
(define-fun $e313 () (_ BitVec 1) (bvand (bvnot forcelo_1) $e312))
(define-fun $e314 () (_ BitVec 1) (bvand (bvnot $e239) $e313))
(define-fun $e315 () (_ BitVec 1) (bvand compareover_in_1 (bvnot $e314)))
(define-fun $e316 () (_ BitVec 1) (bvand (bvnot compareover_in_1) (bvnot $e273)))
(define-fun $e317 () (_ BitVec 1) (bvand (bvnot $e315) (bvnot $e316)))
(define-fun $e318 () (_ BitVec 1) (bvand (bvnot $e265) $e317))
(define-fun $e319 () (_ BitVec 1) (bvand (bvnot comparelo_1) $e318))
(define-fun $e320 () (_ BitVec 1) (ite (= sreg0_0 $e7) #b1 #b0))
(define-fun $e321 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e8)) #b1 #b0))
(define-fun $e322 () (_ BitVec 1) (bvand forcehi_1 $e272))
(define-fun $e323 () (_ BitVec 1) (bvand (bvnot $e265) $e322))
(define-fun $e324 () (_ BitVec 1) (bvand (bvnot $e236) $e323))
(define-fun $e325 () (_ BitVec 1) (ite (= sreg0_0 $e8) #b1 #b0))
(define-fun $e326 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e7)) #b1 #b0))
(define-fun $e327 () (_ BitVec 1) (bvand (bvnot $e236) $e309))
(define-fun $e328 () (_ BitVec 1) (bvand comparehi_1 $e327))
(define-fun $e329 () (_ BitVec 1) (ite (= sreg0_0 (bvnot $e5)) #b1 #b0))
(define-fun $e330 () (_ BitVec 1) (bvand (bvnot forcehi_1) $e251))
(define-fun $e331 () (_ BitVec 1) (bvand compareover_in_1 (bvnot $e330)))
(define-fun $e332 () (_ BitVec 1) (bvand (bvnot $e316) (bvnot $e331)))
(define-fun $e333 () (_ BitVec 1) (bvand compareover_in_1 $e330))
(define-fun $e334 () (_ BitVec 1) (bvand $e265 (bvnot $e333)))
(define-fun $e335 () (_ BitVec 1) (bvand (bvnot $e265) (bvnot $e332)))
(define-fun $e336 () (_ BitVec 1) (bvand (bvnot $e334) (bvnot $e335)))
(define-fun $e337 () (_ BitVec 1) (bvand (bvnot compareover_in_1) $e273))
(define-fun $e338 () (_ BitVec 1) (bvand (bvnot $e265) $e337))
(define-fun $e339 () (_ BitVec 1) (bvand fit_led2_1 (bvnot $e336)))
(define-fun $e340 () (_ BitVec 1) (bvand (bvnot fit_led2_1) (bvnot $e338)))
(define-fun $e341 () (_ BitVec 1) (bvand (bvnot $e339) (bvnot $e340)))
(define-fun $e342 () (_ BitVec 1) (bvand $e329 (bvnot $e341)))
(define-fun $e343 () (_ BitVec 1) (bvand (bvnot $e227) (bvnot $e329)))
(define-fun $e344 () (_ BitVec 1) (bvand (bvnot $e342) (bvnot $e343)))
(define-fun $e345 () (_ BitVec 1) (bvand $e227 (bvnot $e329)))
(define-fun $e346 () (_ BitVec 1) (bvand $e236 (bvnot $e345)))
(define-fun $e347 () (_ BitVec 1) (bvand (bvnot $e236) (bvnot $e344)))
(define-fun $e348 () (_ BitVec 1) (bvand (bvnot $e346) (bvnot $e347)))
(define-fun $e349 () (_ BitVec 1) (bvand $e329 $e341))
(define-fun $e350 () (_ BitVec 1) (bvand (bvnot $e236) $e349))
(define-fun $e351 () (_ BitVec 1) (bvand comparelo_1 (bvnot $e350)))
(define-fun $e352 () (_ BitVec 1) (bvand (bvnot comparelo_1) (bvnot $e348)))
(define-fun $e353 () (_ BitVec 1) (bvand (bvnot $e351) (bvnot $e352)))
(define-fun $e354 () (_ BitVec 1) (bvand $e326 (bvnot $e328)))
(define-fun $e355 () (_ BitVec 1) (bvand (bvnot $e326) (bvnot $e353)))
(define-fun $e356 () (_ BitVec 1) (bvand (bvnot $e354) (bvnot $e355)))
(define-fun $e357 () (_ BitVec 1) (bvand (bvnot $e303) $e325))
(define-fun $e358 () (_ BitVec 1) (bvand (bvnot $e325) (bvnot $e356)))
(define-fun $e359 () (_ BitVec 1) (bvand (bvnot $e357) (bvnot $e358)))
(define-fun $e360 () (_ BitVec 1) (bvand $e321 (bvnot $e324)))
(define-fun $e361 () (_ BitVec 1) (bvand (bvnot $e321) (bvnot $e359)))
(define-fun $e362 () (_ BitVec 1) (bvand (bvnot $e360) (bvnot $e361)))
(define-fun $e363 () (_ BitVec 1) (bvand (bvnot $e284) $e320))
(define-fun $e364 () (_ BitVec 1) (bvand (bvnot $e320) (bvnot $e362)))
(define-fun $e365 () (_ BitVec 1) (bvand (bvnot $e363) (bvnot $e364)))
(define-fun $e366 () (_ BitVec 1) (bvand $e311 (bvnot $e319)))
(define-fun $e367 () (_ BitVec 1) (bvand (bvnot $e311) (bvnot $e365)))
(define-fun $e368 () (_ BitVec 1) (bvand (bvnot $e366) (bvnot $e367)))
(define-fun $e369 () (_ BitVec 1) (bvand $e304 (bvnot $e310)))
(define-fun $e370 () (_ BitVec 1) (bvand (bvnot $e304) (bvnot $e368)))
(define-fun $e371 () (_ BitVec 1) (bvand (bvnot $e369) (bvnot $e370)))
(define-fun $e372 () (_ BitVec 1) (bvand $e290 (bvnot $e303)))
(define-fun $e373 () (_ BitVec 1) (bvand (bvnot $e290) (bvnot $e371)))
(define-fun $e374 () (_ BitVec 1) (bvand (bvnot $e372) (bvnot $e373)))
(define-fun $e375 () (_ BitVec 1) (bvand $e285 (bvnot $e289)))
(define-fun $e376 () (_ BitVec 1) (bvand (bvnot $e285) (bvnot $e374)))
(define-fun $e377 () (_ BitVec 1) (bvand (bvnot $e375) (bvnot $e376)))
(define-fun $e378 () (_ BitVec 1) (bvand $e279 (bvnot $e284)))
(define-fun $e379 () (_ BitVec 1) (bvand (bvnot $e279) (bvnot $e377)))
(define-fun $e380 () (_ BitVec 1) (bvand (bvnot $e378) (bvnot $e379)))
(define-fun $e381 () (_ BitVec 1) (bvand $e256 (bvnot $e278)))
(define-fun $e382 () (_ BitVec 1) (bvand (bvnot $e256) (bvnot $e380)))
(define-fun $e383 () (_ BitVec 1) (bvand (bvnot $e381) (bvnot $e382)))
(define-fun $e384 () (_ BitVec 1) (bvand (bvnot $e325) $e356))
(define-fun $e385 () (_ BitVec 1) (bvand (bvnot $e321) $e384))
(define-fun $e386 () (_ BitVec 1) (bvand (bvnot $e320) $e385))
(define-fun $e387 () (_ BitVec 1) (bvand (bvnot $e311) $e386))
(define-fun $e388 () (_ BitVec 1) (bvand (bvnot $e304) $e387))
(define-fun $e389 () (_ BitVec 1) (bvand (bvnot $e290) $e388))
(define-fun $e390 () (_ BitVec 1) (bvand (bvnot $e285) $e389))
(define-fun $e391 () (_ BitVec 1) (bvand (bvnot $e279) $e390))
(define-fun $e392 () (_ BitVec 1) (bvand (bvnot $e256) $e391))
(define-fun $e393 () (_ BitVec 1) (bvand $e233 (bvnot $e392)))
(define-fun $e394 () (_ BitVec 1) (bvand (bvnot $e233) (bvnot $e383)))
(define-fun $e395 () (_ BitVec 1) (bvand (bvnot $e393) (bvnot $e394)))
(define-fun $e396 () (_ BitVec 1) (bvand $e230 (bvnot $e255)))
(define-fun $e397 () (_ BitVec 1) (bvand (bvnot $e230) (bvnot $e395)))
(define-fun $e398 () (_ BitVec 1) (bvand (bvnot $e396) (bvnot $e397)))
(define-fun $e399 () (_ BitVec 1) (bvand $e326 $e328))
(define-fun $e400 () (_ BitVec 1) (bvand (bvnot $e325) (bvnot $e399)))
(define-fun $e401 () (_ BitVec 1) (bvand (bvnot $e357) (bvnot $e400)))
(define-fun $e402 () (_ BitVec 1) (bvand (bvnot $e321) (bvnot $e401)))
(define-fun $e403 () (_ BitVec 1) (bvand (bvnot $e360) (bvnot $e402)))
(define-fun $e404 () (_ BitVec 1) (bvand (bvnot $e320) (bvnot $e403)))
(define-fun $e405 () (_ BitVec 1) (bvand (bvnot $e363) (bvnot $e404)))
(define-fun $e406 () (_ BitVec 1) (bvand (bvnot $e311) (bvnot $e405)))
(define-fun $e407 () (_ BitVec 1) (bvand (bvnot $e366) (bvnot $e406)))
(define-fun $e408 () (_ BitVec 1) (bvand (bvnot $e304) (bvnot $e407)))
(define-fun $e409 () (_ BitVec 1) (bvand (bvnot $e369) (bvnot $e408)))
(define-fun $e410 () (_ BitVec 1) (bvand (bvnot $e290) (bvnot $e409)))
(define-fun $e411 () (_ BitVec 1) (bvand (bvnot $e372) (bvnot $e410)))
(define-fun $e412 () (_ BitVec 1) (bvand (bvnot $e285) (bvnot $e411)))
(define-fun $e413 () (_ BitVec 1) (bvand (bvnot $e375) (bvnot $e412)))
(define-fun $e414 () (_ BitVec 1) (bvand (bvnot $e279) (bvnot $e413)))
(define-fun $e415 () (_ BitVec 1) (bvand (bvnot $e378) (bvnot $e414)))
(define-fun $e416 () (_ BitVec 1) (bvand (bvnot $e256) (bvnot $e415)))
(define-fun $e417 () (_ BitVec 1) (bvand (bvnot $e381) (bvnot $e416)))
(define-fun $e418 () (_ BitVec 1) (bvand (bvnot $e325) $e399))
(define-fun $e419 () (_ BitVec 1) (bvand (bvnot $e321) $e418))
(define-fun $e420 () (_ BitVec 1) (bvand (bvnot $e320) $e419))
(define-fun $e421 () (_ BitVec 1) (bvand (bvnot $e311) $e420))
(define-fun $e422 () (_ BitVec 1) (bvand (bvnot $e304) $e421))
(define-fun $e423 () (_ BitVec 1) (bvand (bvnot $e290) $e422))
(define-fun $e424 () (_ BitVec 1) (bvand (bvnot $e285) $e423))
(define-fun $e425 () (_ BitVec 1) (bvand (bvnot $e279) $e424))
(define-fun $e426 () (_ BitVec 1) (bvand (bvnot $e256) $e425))
(define-fun $e427 () (_ BitVec 1) (bvand $e233 (bvnot $e426)))
(define-fun $e428 () (_ BitVec 1) (bvand (bvnot $e233) (bvnot $e417)))
(define-fun $e429 () (_ BitVec 1) (bvand (bvnot $e427) (bvnot $e428)))
(define-fun $e430 () (_ BitVec 1) (bvand (bvnot $e230) (bvnot $e429)))
(define-fun $e431 () (_ BitVec 1) (bvand (bvnot $e396) (bvnot $e430)))
(define-fun $e432 () (_ BitVec 1) (bvand comparehi_1 (bvnot $e431)))
(define-fun $e433 () (_ BitVec 1) (bvand (bvnot comparehi_1) (bvnot $e398)))
(define-fun $e434 () (_ BitVec 1) (bvand reset_1 (bvnot $e229)))
(define-fun $e435 () (_ BitVec 1) (bvand (bvnot reset_1) $e433))
(assert (not (= (bvnot $e434) #b0)))
(assert (not (= (bvnot $e435) #b0)))
(assert (not (= (bvnot $e432) #b0)))
(check-sat)
(exit)
