(set-logic QF_BV)
(declare-fun ovflow_0 () (_ BitVec 1))
(declare-fun ovflow_1 () (_ BitVec 1))
(declare-fun present_state_0 () (_ BitVec 4))
(declare-fun reset_1 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 4) (_ bv0 4))
(define-fun $e2 () (_ BitVec 4) (_ bv14 4))
(define-fun $e3 () (_ BitVec 4) (_ bv2 4))
(define-fun $e4 () (_ BitVec 4) (_ bv12 4))
(define-fun $e5 () (_ BitVec 1) (ite (= present_state_0 $e1) #b1 #b0))
(define-fun $e6 () (_ BitVec 1) (ite (= present_state_0 (bvnot $e2)) #b1 #b0))
(define-fun $e7 () (_ BitVec 1) (ite (= ovflow_0 ovflow_1) #b1 #b0))
(define-fun $e8 () (_ BitVec 1) (ite (= present_state_0 $e3) #b1 #b0))
(define-fun $e9 () (_ BitVec 1) (ite (= present_state_0 (bvnot $e4)) #b1 #b0))
(define-fun $e10 () (_ BitVec 1) (bvand (bvnot ovflow_1) $e9))
(define-fun $e11 () (_ BitVec 1) (bvand (bvnot $e7) (bvnot $e9)))
(define-fun $e12 () (_ BitVec 1) (bvand (bvnot $e10) (bvnot $e11)))
(define-fun $e13 () (_ BitVec 1) (bvand (bvnot $e7) $e8))
(define-fun $e14 () (_ BitVec 1) (bvand (bvnot $e8) (bvnot $e12)))
(define-fun $e15 () (_ BitVec 1) (bvand (bvnot $e13) (bvnot $e14)))
(define-fun $e16 () (_ BitVec 1) (bvand $e6 (bvnot $e7)))
(define-fun $e17 () (_ BitVec 1) (bvand (bvnot $e6) (bvnot $e15)))
(define-fun $e18 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e17)))
(define-fun $e19 () (_ BitVec 1) (bvand ovflow_1 $e5))
(define-fun $e20 () (_ BitVec 1) (bvand (bvnot $e5) (bvnot $e18)))
(define-fun $e21 () (_ BitVec 1) (bvand ovflow_1 reset_1))
(define-fun $e22 () (_ BitVec 1) (bvand (bvnot reset_1) $e20))
(assert (not (= (bvnot $e21) #b0)))
(assert (not (= (bvnot $e22) #b0)))
(assert (not (= (bvnot $e19) #b0)))
(check-sat)
(exit)
