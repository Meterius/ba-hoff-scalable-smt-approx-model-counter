(set-logic QF_BV)
(declare-fun CLK_1 () (_ BitVec 1))
(declare-fun CLK_2 () (_ BitVec 1))
(declare-fun CLK_3 () (_ BitVec 1))
(declare-fun COUNT_2 () (_ BitVec 4))
(declare-fun EOC_1 () (_ BitVec 1))
(declare-fun EOC_2 () (_ BitVec 1))
(declare-fun EOC_3 () (_ BitVec 1))
(declare-fun FLG_2 () (_ BitVec 1))
(declare-fun RESET_1 () (_ BitVec 1))
(declare-fun RESET_2 () (_ BitVec 1))
(declare-fun RESET_3 () (_ BitVec 1))
(declare-fun VLDEOC_1 () (_ BitVec 1))
(declare-fun VLDEOC_0 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 4) (_ bv8 4))
(define-fun $e2 () (_ BitVec 4) (_ bv6 4))
(define-fun $e3 () (_ BitVec 1) (ite (= CLK_1 CLK_2) #b1 #b0))
(define-fun $e4 () (_ BitVec 1) (ite (= EOC_1 EOC_2) #b1 #b0))
(define-fun $e5 () (_ BitVec 1) (bvand $e3 $e4))
(define-fun $e6 () (_ BitVec 1) (ite (= RESET_1 RESET_2) #b1 #b0))
(define-fun $e7 () (_ BitVec 1) (bvand $e5 $e6))
(define-fun $e8 () (_ BitVec 1) (bvand EOC_1 (bvnot RESET_1)))
(define-fun $e9 () (_ BitVec 1) (bvand CLK_1 (bvnot $e3)))
(define-fun $e10 () (_ BitVec 1) (ite (= EOC_2 EOC_3) #b1 #b0))
(define-fun $e11 () (_ BitVec 1) (ite (= RESET_2 RESET_3) #b1 #b0))
(define-fun $e12 () (_ BitVec 1) (bvand $e10 $e11))
(define-fun $e13 () (_ BitVec 1) (bvand EOC_2 (bvnot $e10)))
(define-fun $e14 () (_ BitVec 1) (bvand (bvnot FLG_2) (bvnot $e13)))
(define-fun $e15 () (_ BitVec 1) (bvand (bvnot RESET_2) (bvnot $e14)))
(define-fun $e16 () (_ BitVec 1) (bvand (bvnot FLG_2) $e12))
(define-fun $e17 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e15)))
(define-fun $e18 () (_ BitVec 1) (bvand (bvnot $e16) (bvnot $e17)))
(define-fun $e19 () (_ BitVec 1) (ite (= CLK_2 CLK_3) #b1 #b0))
(define-fun $e20 () (_ BitVec 1) (bvand $e10 $e19))
(define-fun $e21 () (_ BitVec 1) (bvand $e11 $e20))
(define-fun $e22 () (_ BitVec 1) (bvand EOC_2 (bvnot RESET_2)))
(define-fun $e23 () (_ BitVec 1) (bvand CLK_2 (bvnot $e19)))
(define-fun $e24 () (_ BitVec 1) (ite (= COUNT_2 (bvnot $e1)) #b1 #b0))
(define-fun $e25 () (_ BitVec 1) (ite (= COUNT_2 $e2) #b1 #b0))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot $e24) (bvnot $e25)))
(define-fun $e27 () (_ BitVec 1) (bvand FLG_2 $e26))
(define-fun $e28 () (_ BitVec 1) (bvand (bvnot FLG_2) (bvnot $e24)))
(define-fun $e29 () (_ BitVec 1) (bvand (bvnot $e27) (bvnot $e28)))
(define-fun $e30 () (_ BitVec 1) (bvand $e23 (bvnot $e29)))
(define-fun $e31 () (_ BitVec 1) (bvand (bvnot $e23) (bvnot $e24)))
(define-fun $e32 () (_ BitVec 1) (bvand (bvnot $e30) (bvnot $e31)))
(define-fun $e33 () (_ BitVec 1) (bvand $e22 $e32))
(define-fun $e34 () (_ BitVec 1) (bvand $e21 (bvnot $e24)))
(define-fun $e35 () (_ BitVec 1) (bvand (bvnot $e21) (bvnot $e33)))
(define-fun $e36 () (_ BitVec 1) (bvand (bvnot $e34) (bvnot $e35)))
(define-fun $e37 () (_ BitVec 1) (ite (= VLDEOC_1 VLDEOC_0) #b1 #b0))
(define-fun $e38 () (_ BitVec 1) (bvand (bvnot VLDEOC_0) $e36))
(define-fun $e39 () (_ BitVec 1) (bvand (bvnot $e36) (bvnot $e37)))
(define-fun $e40 () (_ BitVec 1) (bvand (bvnot $e38) (bvnot $e39)))
(define-fun $e41 () (_ BitVec 1) (bvand $e18 (bvnot $e40)))
(define-fun $e42 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e37)))
(define-fun $e43 () (_ BitVec 1) (bvand (bvnot $e41) (bvnot $e42)))
(define-fun $e44 () (_ BitVec 1) (bvand $e9 (bvnot $e43)))
(define-fun $e45 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e37)))
(define-fun $e46 () (_ BitVec 1) (bvand (bvnot $e44) (bvnot $e45)))
(define-fun $e47 () (_ BitVec 1) (bvand $e8 (bvnot $e46)))
(define-fun $e48 () (_ BitVec 1) (bvand VLDEOC_0 (bvnot $e8)))
(define-fun $e49 () (_ BitVec 1) (bvand (bvnot $e47) (bvnot $e48)))
(define-fun $e50 () (_ BitVec 1) (bvand $e7 (bvnot $e37)))
(define-fun $e51 () (_ BitVec 1) (bvand (bvnot $e7) (bvnot $e49)))
(assert (not (= (bvnot $e50) #b0)))
(assert (not (= (bvnot $e51) #b0)))
(check-sat)
(exit)
