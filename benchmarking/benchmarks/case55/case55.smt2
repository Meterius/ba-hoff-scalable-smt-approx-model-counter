(set-logic QF_BV)
(declare-fun autoname_1 () (_ BitVec 1))
(declare-fun autoname_2 () (_ BitVec 1))
(declare-fun autoname_3 () (_ BitVec 5))
(declare-fun autoname_4 () (_ BitVec 1))
(declare-fun autoname_5 () (_ BitVec 1))
(declare-fun jumper_1 () (_ BitVec 5))
(declare-fun state_0 () (_ BitVec 4))
(declare-fun state_1 () (_ BitVec 4))
(declare-fun reset_0 () (_ BitVec 1))
(declare-fun vme_iack_in_1 () (_ BitVec 1))
(define-fun $e1 () (_ BitVec 4) (_ bv0 4))
(define-fun $e2 () (_ BitVec 4) (_ bv14 4))
(define-fun $e3 () (_ BitVec 4) (_ bv6 4))
(define-fun $e4 () (_ BitVec 4) (_ bv10 4))
(define-fun $e5 () (_ BitVec 4) (_ bv2 4))
(define-fun $e6 () (_ BitVec 4) (_ bv12 4))
(define-fun $e7 () (_ BitVec 4) (_ bv4 4))
(define-fun $e8 () (_ BitVec 4) (_ bv8 4))
(define-fun $e9 () (_ BitVec 1) (ite (= state_1 $e1) #b1 #b0))
(define-fun $e10 () (_ BitVec 1) (ite (= state_0 $e1) #b1 #b0))
(define-fun $e11 () (_ BitVec 1) (bvand (bvnot autoname_1) (bvnot autoname_2)))
(define-fun $e12 () (_ BitVec 1) (bvand vme_iack_in_1 (bvnot $e11)))
(define-fun $e13 () (_ BitVec 1) (ite (= state_1 (bvnot $e2)) #b1 #b0))
(define-fun $e14 () (_ BitVec 1) (bvand (bvnot $e9) $e12))
(define-fun $e15 () (_ BitVec 1) (bvand (bvnot $e12) (bvnot $e13)))
(define-fun $e16 () (_ BitVec 1) (bvand (bvnot $e14) (bvnot $e15)))
(define-fun $e17 () (_ BitVec 1) (ite (= state_0 (bvnot $e2)) #b1 #b0))
(define-fun $e18 () (_ BitVec 1) (bvand (bvnot autoname_1) (bvnot vme_iack_in_1)))
(define-fun $e19 () (_ BitVec 1) (ite (= state_1 $e3) #b1 #b0))
(define-fun $e20 () (_ BitVec 1) (bvand vme_iack_in_1 $e11))
(define-fun $e21 () (_ BitVec 1) (ite (= autoname_3 jumper_1) #b1 #b0))
(define-fun $e22 () (_ BitVec 1) (bvand (bvnot autoname_4) autoname_5))
(define-fun $e23 () (_ BitVec 1) (ite (= state_1 (bvnot $e4)) #b1 #b0))
(define-fun $e24 () (_ BitVec 1) (ite (= state_1 $e5) #b1 #b0))
(define-fun $e25 () (_ BitVec 1) (bvand $e22 (bvnot $e23)))
(define-fun $e26 () (_ BitVec 1) (bvand (bvnot $e22) (bvnot $e24)))
(define-fun $e27 () (_ BitVec 1) (bvand (bvnot $e25) (bvnot $e26)))
(define-fun $e28 () (_ BitVec 1) (bvand $e21 (bvnot $e27)))
(define-fun $e29 () (_ BitVec 1) (bvand (bvnot $e21) (bvnot $e23)))
(define-fun $e30 () (_ BitVec 1) (bvand (bvnot $e28) (bvnot $e29)))
(define-fun $e31 () (_ BitVec 1) (bvand $e20 (bvnot $e30)))
(define-fun $e32 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e20)))
(define-fun $e33 () (_ BitVec 1) (bvand (bvnot $e31) (bvnot $e32)))
(define-fun $e34 () (_ BitVec 1) (bvand $e18 (bvnot $e19)))
(define-fun $e35 () (_ BitVec 1) (bvand (bvnot $e18) (bvnot $e33)))
(define-fun $e36 () (_ BitVec 1) (bvand (bvnot $e34) (bvnot $e35)))
(define-fun $e37 () (_ BitVec 1) (ite (= state_0 $e5) #b1 #b0))
(define-fun $e38 () (_ BitVec 1) (ite (= state_1 (bvnot $e6)) #b1 #b0))
(define-fun $e39 () (_ BitVec 1) (ite (= state_0 (bvnot $e6)) #b1 #b0))
(define-fun $e40 () (_ BitVec 1) (ite (= state_1 $e7) #b1 #b0))
(define-fun $e41 () (_ BitVec 1) (ite (= state_0 $e7) #b1 #b0))
(define-fun $e42 () (_ BitVec 1) (ite (= state_0 (bvnot $e4)) #b1 #b0))
(define-fun $e43 () (_ BitVec 1) (bvand autoname_1 autoname_2))
(define-fun $e44 () (_ BitVec 1) (bvand (bvnot $e9) $e43))
(define-fun $e45 () (_ BitVec 1) (ite (= state_0 $e3) #b1 #b0))
(define-fun $e46 () (_ BitVec 1) (ite (= state_1 (bvnot $e8)) #b1 #b0))
(define-fun $e47 () (_ BitVec 1) (ite (= state_0 (bvnot $e8)) #b1 #b0))
(define-fun $e48 () (_ BitVec 1) (ite (= state_1 $e8) #b1 #b0))
(define-fun $e49 () (_ BitVec 1) (ite (= state_0 $e8) #b1 #b0))
(define-fun $e50 () (_ BitVec 1) (ite (= state_1 (bvnot $e3)) #b1 #b0))
(define-fun $e51 () (_ BitVec 1) (ite (= state_0 (bvnot $e3)) #b1 #b0))
(define-fun $e52 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e18)))
(define-fun $e53 () (_ BitVec 1) (bvand $e18 (bvnot $e50)))
(define-fun $e54 () (_ BitVec 1) (bvand (bvnot $e52) (bvnot $e53)))
(define-fun $e55 () (_ BitVec 1) (bvand $e51 (bvnot $e54)))
(define-fun $e56 () (_ BitVec 1) (bvand (bvnot $e9) (bvnot $e51)))
(define-fun $e57 () (_ BitVec 1) (bvand (bvnot $e55) (bvnot $e56)))
(define-fun $e58 () (_ BitVec 1) (bvand $e49 (bvnot $e50)))
(define-fun $e59 () (_ BitVec 1) (bvand (bvnot $e49) (bvnot $e57)))
(define-fun $e60 () (_ BitVec 1) (bvand (bvnot $e58) (bvnot $e59)))
(define-fun $e61 () (_ BitVec 1) (bvand $e47 (bvnot $e48)))
(define-fun $e62 () (_ BitVec 1) (bvand (bvnot $e47) (bvnot $e60)))
(define-fun $e63 () (_ BitVec 1) (bvand (bvnot $e61) (bvnot $e62)))
(define-fun $e64 () (_ BitVec 1) (bvand $e45 (bvnot $e46)))
(define-fun $e65 () (_ BitVec 1) (bvand (bvnot $e45) (bvnot $e63)))
(define-fun $e66 () (_ BitVec 1) (bvand (bvnot $e64) (bvnot $e65)))
(define-fun $e67 () (_ BitVec 1) (bvand (bvnot $e23) (bvnot $e43)))
(define-fun $e68 () (_ BitVec 1) (bvand (bvnot $e44) (bvnot $e67)))
(define-fun $e69 () (_ BitVec 1) (bvand $e42 (bvnot $e68)))
(define-fun $e70 () (_ BitVec 1) (bvand (bvnot $e42) (bvnot $e66)))
(define-fun $e71 () (_ BitVec 1) (bvand (bvnot $e69) (bvnot $e70)))
(define-fun $e72 () (_ BitVec 1) (bvand (bvnot $e23) $e41))
(define-fun $e73 () (_ BitVec 1) (bvand (bvnot $e41) (bvnot $e71)))
(define-fun $e74 () (_ BitVec 1) (bvand (bvnot $e72) (bvnot $e73)))
(define-fun $e75 () (_ BitVec 1) (bvand $e39 (bvnot $e40)))
(define-fun $e76 () (_ BitVec 1) (bvand (bvnot $e39) (bvnot $e74)))
(define-fun $e77 () (_ BitVec 1) (bvand (bvnot $e75) (bvnot $e76)))
(define-fun $e78 () (_ BitVec 1) (bvand $e37 (bvnot $e38)))
(define-fun $e79 () (_ BitVec 1) (bvand (bvnot $e37) (bvnot $e77)))
(define-fun $e80 () (_ BitVec 1) (bvand (bvnot $e78) (bvnot $e79)))
(define-fun $e81 () (_ BitVec 1) (bvand $e17 (bvnot $e36)))
(define-fun $e82 () (_ BitVec 1) (bvand (bvnot $e17) (bvnot $e80)))
(define-fun $e83 () (_ BitVec 1) (bvand (bvnot $e81) (bvnot $e82)))
(define-fun $e84 () (_ BitVec 1) (bvand $e10 (bvnot $e16)))
(define-fun $e85 () (_ BitVec 1) (bvand (bvnot $e10) (bvnot $e83)))
(define-fun $e86 () (_ BitVec 1) (bvand (bvnot $e84) (bvnot $e85)))
(define-fun $e87 () (_ BitVec 1) (bvand reset_0 (bvnot $e86)))
(define-fun $e88 () (_ BitVec 1) (bvand (bvnot reset_0) (bvnot $e9)))
(assert (not (= (bvnot $e87) #b0)))
(assert (not (= (bvnot $e88) #b0)))
(check-sat)
(exit)
